
day18.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000012a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000012a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000015c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000198  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000060f  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000552  00000000  00000000  000007cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000225  00000000  00000000  00000d21  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000f48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000316  00000000  00000000  00000f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  00001292  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 36       	cpi	r26, 0x60	; 96
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
  74:	0c 94 69 00 	jmp	0xd2	; 0xd2 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <Timer_0_Init>:


void Timer_0_Init(void)
{
	// TCCR1 for 16 bit
	TCCR1B |= (1<<CS10); // prescalling 64 -- 011
  7c:	8e b5       	in	r24, 0x2e	; 46
  7e:	81 60       	ori	r24, 0x01	; 1
  80:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1<<CS11);
  82:	8e b5       	in	r24, 0x2e	; 46
  84:	82 60       	ori	r24, 0x02	; 2
  86:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~(1<<CS12);
  88:	8e b5       	in	r24, 0x2e	; 46
  8a:	8b 7f       	andi	r24, 0xFB	; 251
  8c:	8e bd       	out	0x2e, r24	; 46
	
	// sob gula 0 korle wave form generation normal mode
	TCCR1A &= ~(1<<WGM10); //timer fast pwm mode 1110
  8e:	8f b5       	in	r24, 0x2f	; 47
  90:	8e 7f       	andi	r24, 0xFE	; 254
  92:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= (1<<WGM11); // "
  94:	8f b5       	in	r24, 0x2f	; 47
  96:	82 60       	ori	r24, 0x02	; 2
  98:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<WGM12); // "
  9a:	8e b5       	in	r24, 0x2e	; 46
  9c:	88 60       	ori	r24, 0x08	; 8
  9e:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1<<WGM13); // "
  a0:	8e b5       	in	r24, 0x2e	; 46
  a2:	80 61       	ori	r24, 0x10	; 16
  a4:	8e bd       	out	0x2e, r24	; 46
	
	TCCR1A &= ~(1<<COM1A0); //output compare mode, fast pwm non-inverting mode
  a6:	8f b5       	in	r24, 0x2f	; 47
  a8:	8f 7b       	andi	r24, 0xBF	; 191
  aa:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= (1<<COM1A1); //output compare mode, fast pwm non-inverting mode
  ac:	8f b5       	in	r24, 0x2f	; 47
  ae:	80 68       	ori	r24, 0x80	; 128
  b0:	8f bd       	out	0x2f, r24	; 47
	
	TCNT1 = 0; // clear time counter
  b2:	1d bc       	out	0x2d, r1	; 45
  b4:	1c bc       	out	0x2c, r1	; 44
	//OCR1A = 31250;
	ICR1 = 2499; // 50hz 20ms 
  b6:	83 ec       	ldi	r24, 0xC3	; 195
  b8:	99 e0       	ldi	r25, 0x09	; 9
  ba:	97 bd       	out	0x27, r25	; 39
  bc:	86 bd       	out	0x26, r24	; 38
	sei(); // set enable interrupt
  be:	78 94       	sei
  c0:	08 95       	ret

000000c2 <main>:
}
*/

int main(void)
{
	DDRD |= (1<<5);
  c2:	8d 9a       	sbi	0x11, 5	; 17
	
	Timer_0_Init(); // initilizing timer = 0
  c4:	0e 94 3e 00 	call	0x7c	; 0x7c <Timer_0_Init>
	while (1) 
    {
		OCR1A = 125; // 1mili sec 125hz
  c8:	8d e7       	ldi	r24, 0x7D	; 125
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	9b bd       	out	0x2b, r25	; 43
  ce:	8a bd       	out	0x2a, r24	; 42
  d0:	fd cf       	rjmp	.-6      	; 0xcc <main+0xa>

000000d2 <_exit>:
  d2:	f8 94       	cli

000000d4 <__stop_program>:
  d4:	ff cf       	rjmp	.-2      	; 0xd4 <__stop_program>
