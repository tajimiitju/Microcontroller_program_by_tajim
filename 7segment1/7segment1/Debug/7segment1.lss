
7segment1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000001d8  0000024c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000047f  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000d3  00000000  00000000  0000071b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000024d  00000000  00000000  000007ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00000a3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000167  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00000bc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 ea 00 	jmp	0x1d4	; 0x1d4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU	4000000UL
#include <util/delay.h>
 
int main(void)
{
	DDRA = 0xFF;	// Configure port B as output
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
 
    while(1)
    {
        //TODO:: Please write your application code
 
		PORTA = 0b00111111;		// Display Number 0
  70:	9f e3       	ldi	r25, 0x3F	; 63
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b00110000;		// Display Number 1
  72:	d0 e3       	ldi	r29, 0x30	; 48
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01011011;		// Display Number 2
  74:	cb e5       	ldi	r28, 0x5B	; 91
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01001111;		// Display Number 3
  76:	bf e4       	ldi	r27, 0x4F	; 79
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01100110;		// Display Number 4
  78:	a6 e6       	ldi	r26, 0x66	; 102
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01101101;		// Display Number 5
  7a:	fd e6       	ldi	r31, 0x6D	; 109
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01111101;		// Display Number 6
  7c:	ed e7       	ldi	r30, 0x7D	; 125
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b00000111;		// Display Number 7
  7e:	77 e0       	ldi	r23, 0x07	; 7
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01111111;		// Display Number 8
  80:	8f e7       	ldi	r24, 0x7F	; 127
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01101111;		// Display Number 9
  82:	6f e6       	ldi	r22, 0x6F	; 111
		_delay_ms(500);		// Wait for 1s
		
 
		PORTA = 0b01110111;		// Display Letter A
  84:	57 e7       	ldi	r21, 0x77	; 119
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01111111;		// Display Number B
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b00111001;		// Display Letter C
  86:	49 e3       	ldi	r20, 0x39	; 57
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b00111111;		// Display Number D
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01111001;		// Display Letter E
  88:	39 e7       	ldi	r19, 0x79	; 121
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01110001;		// Display Letter F
  8a:	0f 2e       	mov	r0, r31
  8c:	f1 e7       	ldi	r31, 0x71	; 113
  8e:	ff 2e       	mov	r15, r31
  90:	f0 2d       	mov	r31, r0
 
    while(1)
    {
        //TODO:: Please write your application code
 
		PORTA = 0b00111111;		// Display Number 0
  92:	9b bb       	out	0x1b, r25	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  94:	0f e7       	ldi	r16, 0x7F	; 127
  96:	1a e1       	ldi	r17, 0x1A	; 26
  98:	26 e0       	ldi	r18, 0x06	; 6
  9a:	01 50       	subi	r16, 0x01	; 1
  9c:	10 40       	sbci	r17, 0x00	; 0
  9e:	20 40       	sbci	r18, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0x2e>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x38>
  a4:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b00110000;		// Display Number 1
  a6:	db bb       	out	0x1b, r29	; 27
  a8:	0f e7       	ldi	r16, 0x7F	; 127
  aa:	1a e1       	ldi	r17, 0x1A	; 26
  ac:	26 e0       	ldi	r18, 0x06	; 6
  ae:	01 50       	subi	r16, 0x01	; 1
  b0:	10 40       	sbci	r17, 0x00	; 0
  b2:	20 40       	sbci	r18, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <main+0x42>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <main+0x4c>
  b8:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01011011;		// Display Number 2
  ba:	cb bb       	out	0x1b, r28	; 27
  bc:	0f e7       	ldi	r16, 0x7F	; 127
  be:	1a e1       	ldi	r17, 0x1A	; 26
  c0:	26 e0       	ldi	r18, 0x06	; 6
  c2:	01 50       	subi	r16, 0x01	; 1
  c4:	10 40       	sbci	r17, 0x00	; 0
  c6:	20 40       	sbci	r18, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x56>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x60>
  cc:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01001111;		// Display Number 3
  ce:	bb bb       	out	0x1b, r27	; 27
  d0:	0f e7       	ldi	r16, 0x7F	; 127
  d2:	1a e1       	ldi	r17, 0x1A	; 26
  d4:	26 e0       	ldi	r18, 0x06	; 6
  d6:	01 50       	subi	r16, 0x01	; 1
  d8:	10 40       	sbci	r17, 0x00	; 0
  da:	20 40       	sbci	r18, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x6a>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x74>
  e0:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01100110;		// Display Number 4
  e2:	ab bb       	out	0x1b, r26	; 27
  e4:	0f e7       	ldi	r16, 0x7F	; 127
  e6:	1a e1       	ldi	r17, 0x1A	; 26
  e8:	26 e0       	ldi	r18, 0x06	; 6
  ea:	01 50       	subi	r16, 0x01	; 1
  ec:	10 40       	sbci	r17, 0x00	; 0
  ee:	20 40       	sbci	r18, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x7e>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x88>
  f4:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01101101;		// Display Number 5
  f6:	fb bb       	out	0x1b, r31	; 27
  f8:	0f e7       	ldi	r16, 0x7F	; 127
  fa:	1a e1       	ldi	r17, 0x1A	; 26
  fc:	26 e0       	ldi	r18, 0x06	; 6
  fe:	01 50       	subi	r16, 0x01	; 1
 100:	10 40       	sbci	r17, 0x00	; 0
 102:	20 40       	sbci	r18, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <main+0x92>
 106:	00 c0       	rjmp	.+0      	; 0x108 <main+0x9c>
 108:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01111101;		// Display Number 6
 10a:	eb bb       	out	0x1b, r30	; 27
 10c:	0f e7       	ldi	r16, 0x7F	; 127
 10e:	1a e1       	ldi	r17, 0x1A	; 26
 110:	26 e0       	ldi	r18, 0x06	; 6
 112:	01 50       	subi	r16, 0x01	; 1
 114:	10 40       	sbci	r17, 0x00	; 0
 116:	20 40       	sbci	r18, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0xa6>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0xb0>
 11c:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b00000111;		// Display Number 7
 11e:	7b bb       	out	0x1b, r23	; 27
 120:	0f e7       	ldi	r16, 0x7F	; 127
 122:	1a e1       	ldi	r17, 0x1A	; 26
 124:	26 e0       	ldi	r18, 0x06	; 6
 126:	01 50       	subi	r16, 0x01	; 1
 128:	10 40       	sbci	r17, 0x00	; 0
 12a:	20 40       	sbci	r18, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <main+0xba>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <main+0xc4>
 130:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01111111;		// Display Number 8
 132:	8b bb       	out	0x1b, r24	; 27
 134:	0f e7       	ldi	r16, 0x7F	; 127
 136:	1a e1       	ldi	r17, 0x1A	; 26
 138:	26 e0       	ldi	r18, 0x06	; 6
 13a:	01 50       	subi	r16, 0x01	; 1
 13c:	10 40       	sbci	r17, 0x00	; 0
 13e:	20 40       	sbci	r18, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0xce>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0xd8>
 144:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01101111;		// Display Number 9
 146:	6b bb       	out	0x1b, r22	; 27
 148:	0f e7       	ldi	r16, 0x7F	; 127
 14a:	1a e1       	ldi	r17, 0x1A	; 26
 14c:	26 e0       	ldi	r18, 0x06	; 6
 14e:	01 50       	subi	r16, 0x01	; 1
 150:	10 40       	sbci	r17, 0x00	; 0
 152:	20 40       	sbci	r18, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0xe2>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0xec>
 158:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		
 
		PORTA = 0b01110111;		// Display Letter A
 15a:	5b bb       	out	0x1b, r21	; 27
 15c:	0f e7       	ldi	r16, 0x7F	; 127
 15e:	1a e1       	ldi	r17, 0x1A	; 26
 160:	26 e0       	ldi	r18, 0x06	; 6
 162:	01 50       	subi	r16, 0x01	; 1
 164:	10 40       	sbci	r17, 0x00	; 0
 166:	20 40       	sbci	r18, 0x00	; 0
 168:	e1 f7       	brne	.-8      	; 0x162 <main+0xf6>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <main+0x100>
 16c:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01111111;		// Display Number B
 16e:	8b bb       	out	0x1b, r24	; 27
 170:	0f e7       	ldi	r16, 0x7F	; 127
 172:	1a e1       	ldi	r17, 0x1A	; 26
 174:	26 e0       	ldi	r18, 0x06	; 6
 176:	01 50       	subi	r16, 0x01	; 1
 178:	10 40       	sbci	r17, 0x00	; 0
 17a:	20 40       	sbci	r18, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <main+0x10a>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0x114>
 180:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b00111001;		// Display Letter C
 182:	4b bb       	out	0x1b, r20	; 27
 184:	0f e7       	ldi	r16, 0x7F	; 127
 186:	1a e1       	ldi	r17, 0x1A	; 26
 188:	26 e0       	ldi	r18, 0x06	; 6
 18a:	01 50       	subi	r16, 0x01	; 1
 18c:	10 40       	sbci	r17, 0x00	; 0
 18e:	20 40       	sbci	r18, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <main+0x11e>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0x128>
 194:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b00111111;		// Display Number D
 196:	9b bb       	out	0x1b, r25	; 27
 198:	0f e7       	ldi	r16, 0x7F	; 127
 19a:	1a e1       	ldi	r17, 0x1A	; 26
 19c:	26 e0       	ldi	r18, 0x06	; 6
 19e:	01 50       	subi	r16, 0x01	; 1
 1a0:	10 40       	sbci	r17, 0x00	; 0
 1a2:	20 40       	sbci	r18, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <main+0x132>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0x13c>
 1a8:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01111001;		// Display Letter E
 1aa:	3b bb       	out	0x1b, r19	; 27
 1ac:	0f e7       	ldi	r16, 0x7F	; 127
 1ae:	1a e1       	ldi	r17, 0x1A	; 26
 1b0:	26 e0       	ldi	r18, 0x06	; 6
 1b2:	01 50       	subi	r16, 0x01	; 1
 1b4:	10 40       	sbci	r17, 0x00	; 0
 1b6:	20 40       	sbci	r18, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <main+0x146>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x150>
 1bc:	00 00       	nop
		_delay_ms(500);		// Wait for 1s
		PORTA = 0b01110001;		// Display Letter F
 1be:	fb ba       	out	0x1b, r15	; 27
 1c0:	0f e7       	ldi	r16, 0x7F	; 127
 1c2:	1a e1       	ldi	r17, 0x1A	; 26
 1c4:	26 e0       	ldi	r18, 0x06	; 6
 1c6:	01 50       	subi	r16, 0x01	; 1
 1c8:	10 40       	sbci	r17, 0x00	; 0
 1ca:	20 40       	sbci	r18, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0x15a>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0x164>
 1d0:	00 00       	nop
 1d2:	5f cf       	rjmp	.-322    	; 0x92 <main+0x26>

000001d4 <_exit>:
 1d4:	f8 94       	cli

000001d6 <__stop_program>:
 1d6:	ff cf       	rjmp	.-2      	; 0x1d6 <__stop_program>
