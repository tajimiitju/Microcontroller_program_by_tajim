
LDR_LCD_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000910  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000910  000009a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800078  00800078  000009bc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000a54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fd1  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000801  00000000  00000000  00001ad5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000079c  00000000  00000000  000022d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00002a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f7  00000000  00000000  00002bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000689  00000000  00000000  00002faf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003638  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e1       	ldi	r30, 0x10	; 16
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e7       	ldi	r26, 0x78	; 120
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 38       	cpi	r26, 0x88	; 136
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 0e 01 	call	0x21c	; 0x21c <main>
  8a:	0c 94 86 04 	jmp	0x90c	; 0x90c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <adc_init>:
#include <avr/io.h>
#include "adc.h"

void adc_init(void)
{
	ADMUX |= (1<<REFS0);                         // For Aref=AVcc;
  92:	3e 9a       	sbi	0x07, 6	; 7
	ADMUX &= ~(1<<REFS1);                
  94:	3f 98       	cbi	0x07, 7	; 7
	
	ADCSRA &= ~(1<<ADPS0); //Rrescalar div factor =64 - 011
  96:	30 98       	cbi	0x06, 0	; 6
	ADCSRA |= (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1); //Rrescalar div factor =64 - 011
  98:	86 b1       	in	r24, 0x06	; 6
  9a:	86 68       	ori	r24, 0x86	; 134
  9c:	86 b9       	out	0x06, r24	; 6
  9e:	08 95       	ret

000000a0 <adc_read>:
}

uint16_t adc_read(void)
{
	//5 channel selection
	ADMUX &= ~(1<<MUX0);
  a0:	38 98       	cbi	0x07, 0	; 7
	ADMUX &= ~(1<<MUX1);
  a2:	39 98       	cbi	0x07, 1	; 7
	ADMUX &= ~(1<<MUX2);
  a4:	3a 98       	cbi	0x07, 2	; 7
	ADMUX &= ~(1<<MUX3);
  a6:	3b 98       	cbi	0x07, 3	; 7
	
	//6. start conversion
	ADCSRA |= (1<<ADSC);
  a8:	36 9a       	sbi	0x06, 6	; 6
	while (bit_is_set(ADCSRA,ADSC));
  aa:	36 99       	sbic	0x06, 6	; 6
  ac:	fe cf       	rjmp	.-4      	; 0xaa <adc_read+0xa>
	
	
	//read adc data
	return ADCW;
  ae:	84 b1       	in	r24, 0x04	; 4
  b0:	95 b1       	in	r25, 0x05	; 5
}
  b2:	08 95       	ret

000000b4 <LCDSendCmd4BIT>:



void LCDPutchar(char c)
{
	LCDSendData(c);
  b4:	80 ff       	sbrs	r24, 0
  b6:	02 c0       	rjmp	.+4      	; 0xbc <LCDSendCmd4BIT+0x8>
  b8:	ac 9a       	sbi	0x15, 4	; 21
  ba:	01 c0       	rjmp	.+2      	; 0xbe <LCDSendCmd4BIT+0xa>
  bc:	ac 98       	cbi	0x15, 4	; 21
  be:	81 ff       	sbrs	r24, 1
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <LCDSendCmd4BIT+0x12>
  c2:	ad 9a       	sbi	0x15, 5	; 21
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <LCDSendCmd4BIT+0x14>
  c6:	ad 98       	cbi	0x15, 5	; 21
  c8:	82 ff       	sbrs	r24, 2
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <LCDSendCmd4BIT+0x1c>
  cc:	ae 9a       	sbi	0x15, 6	; 21
  ce:	01 c0       	rjmp	.+2      	; 0xd2 <LCDSendCmd4BIT+0x1e>
  d0:	ae 98       	cbi	0x15, 6	; 21
  d2:	83 ff       	sbrs	r24, 3
  d4:	02 c0       	rjmp	.+4      	; 0xda <LCDSendCmd4BIT+0x26>
  d6:	af 9a       	sbi	0x15, 7	; 21
  d8:	01 c0       	rjmp	.+2      	; 0xdc <LCDSendCmd4BIT+0x28>
  da:	af 98       	cbi	0x15, 7	; 21
  dc:	96 9a       	sbi	0x12, 6	; 18
  de:	96 98       	cbi	0x12, 6	; 18
  e0:	8f e9       	ldi	r24, 0x9F	; 159
  e2:	9f e0       	ldi	r25, 0x0F	; 15
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <LCDSendCmd4BIT+0x30>
  e8:	00 c0       	rjmp	.+0      	; 0xea <LCDSendCmd4BIT+0x36>
  ea:	00 00       	nop
  ec:	08 95       	ret

000000ee <LCDSendCmd>:
  ee:	cf 93       	push	r28
  f0:	c8 2f       	mov	r28, r24
  f2:	94 98       	cbi	0x12, 4	; 18
  f4:	82 95       	swap	r24
  f6:	8f 70       	andi	r24, 0x0F	; 15
  f8:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCDSendCmd4BIT>
  fc:	8c 2f       	mov	r24, r28
  fe:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCDSendCmd4BIT>
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <LCDGotoXY>:
 106:	61 30       	cpi	r22, 0x01	; 1
 108:	21 f4       	brne	.+8      	; 0x112 <LCDGotoXY+0xc>
 10a:	81 58       	subi	r24, 0x81	; 129
 10c:	0e 94 77 00 	call	0xee	; 0xee <LCDSendCmd>
 110:	08 95       	ret
 112:	62 30       	cpi	r22, 0x02	; 2
 114:	21 f4       	brne	.+8      	; 0x11e <LCDGotoXY+0x18>
 116:	81 54       	subi	r24, 0x41	; 65
 118:	0e 94 77 00 	call	0xee	; 0xee <LCDSendCmd>
 11c:	08 95       	ret
 11e:	63 30       	cpi	r22, 0x03	; 3
 120:	21 f4       	brne	.+8      	; 0x12a <LCDGotoXY+0x24>
 122:	8d 56       	subi	r24, 0x6D	; 109
 124:	0e 94 77 00 	call	0xee	; 0xee <LCDSendCmd>
 128:	08 95       	ret
 12a:	64 30       	cpi	r22, 0x04	; 4
 12c:	19 f4       	brne	.+6      	; 0x134 <LCDGotoXY+0x2e>
 12e:	8d 52       	subi	r24, 0x2D	; 45
 130:	0e 94 77 00 	call	0xee	; 0xee <LCDSendCmd>
 134:	08 95       	ret

00000136 <LCDInit>:
 136:	8c 9a       	sbi	0x11, 4	; 17
 138:	8d 9a       	sbi	0x11, 5	; 17
 13a:	8e 9a       	sbi	0x11, 6	; 17
 13c:	a4 9a       	sbi	0x14, 4	; 20
 13e:	a5 9a       	sbi	0x14, 5	; 20
 140:	a6 9a       	sbi	0x14, 6	; 20
 142:	a7 9a       	sbi	0x14, 7	; 20
 144:	94 98       	cbi	0x12, 4	; 18
 146:	96 98       	cbi	0x12, 6	; 18
 148:	2f e7       	ldi	r18, 0x7F	; 127
 14a:	89 ea       	ldi	r24, 0xA9	; 169
 14c:	93 e0       	ldi	r25, 0x03	; 3
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	90 40       	sbci	r25, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <LCDInit+0x18>
 156:	00 c0       	rjmp	.+0      	; 0x158 <LCDInit+0x22>
 158:	00 00       	nop
 15a:	83 e0       	ldi	r24, 0x03	; 3
 15c:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCDSendCmd4BIT>
 160:	2f e7       	ldi	r18, 0x7F	; 127
 162:	89 ea       	ldi	r24, 0xA9	; 169
 164:	93 e0       	ldi	r25, 0x03	; 3
 166:	21 50       	subi	r18, 0x01	; 1
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <LCDInit+0x30>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <LCDInit+0x3a>
 170:	00 00       	nop
 172:	83 e0       	ldi	r24, 0x03	; 3
 174:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCDSendCmd4BIT>
 178:	2f e7       	ldi	r18, 0x7F	; 127
 17a:	89 ea       	ldi	r24, 0xA9	; 169
 17c:	93 e0       	ldi	r25, 0x03	; 3
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	80 40       	sbci	r24, 0x00	; 0
 182:	90 40       	sbci	r25, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <LCDInit+0x48>
 186:	00 c0       	rjmp	.+0      	; 0x188 <LCDInit+0x52>
 188:	00 00       	nop
 18a:	83 e0       	ldi	r24, 0x03	; 3
 18c:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCDSendCmd4BIT>
 190:	2f e7       	ldi	r18, 0x7F	; 127
 192:	89 ea       	ldi	r24, 0xA9	; 169
 194:	93 e0       	ldi	r25, 0x03	; 3
 196:	21 50       	subi	r18, 0x01	; 1
 198:	80 40       	sbci	r24, 0x00	; 0
 19a:	90 40       	sbci	r25, 0x00	; 0
 19c:	e1 f7       	brne	.-8      	; 0x196 <LCDInit+0x60>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <LCDInit+0x6a>
 1a0:	00 00       	nop
 1a2:	82 e0       	ldi	r24, 0x02	; 2
 1a4:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCDSendCmd4BIT>
 1a8:	88 e2       	ldi	r24, 0x28	; 40
 1aa:	0e 94 77 00 	call	0xee	; 0xee <LCDSendCmd>
 1ae:	8c e0       	ldi	r24, 0x0C	; 12
 1b0:	0e 94 77 00 	call	0xee	; 0xee <LCDSendCmd>
 1b4:	86 e0       	ldi	r24, 0x06	; 6
 1b6:	0e 94 77 00 	call	0xee	; 0xee <LCDSendCmd>
 1ba:	80 e8       	ldi	r24, 0x80	; 128
 1bc:	0e 94 77 00 	call	0xee	; 0xee <LCDSendCmd>
 1c0:	08 95       	ret

000001c2 <LCDSendData>:
 1c2:	cf 93       	push	r28
 1c4:	c8 2f       	mov	r28, r24
 1c6:	94 9a       	sbi	0x12, 4	; 18
 1c8:	82 95       	swap	r24
 1ca:	8f 70       	andi	r24, 0x0F	; 15
 1cc:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCDSendCmd4BIT>
 1d0:	8c 2f       	mov	r24, r28
 1d2:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCDSendCmd4BIT>
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <LCDString>:
}


void LCDString(char *msg)
{
 1da:	0f 93       	push	r16
 1dc:	1f 93       	push	r17
 1de:	cf 93       	push	r28
 1e0:	fc 01       	movw	r30, r24
	uint8_t len = 0;

	while(*msg)
 1e2:	80 81       	ld	r24, Z
 1e4:	88 23       	and	r24, r24
 1e6:	79 f0       	breq	.+30     	; 0x206 <LCDString+0x2c>
 1e8:	8f 01       	movw	r16, r30
 1ea:	0f 5f       	subi	r16, 0xFF	; 255
 1ec:	1f 4f       	sbci	r17, 0xFF	; 255
 1ee:	c0 e0       	ldi	r28, 0x00	; 0



void LCDPutchar(char c)
{
	LCDSendData(c);
 1f0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <LCDSendData>

	while(*msg)
	{
		LCDPutchar(*msg);
		msg++; 
		len++;
 1f4:	cf 5f       	subi	r28, 0xFF	; 255

void LCDString(char *msg)
{
	uint8_t len = 0;

	while(*msg)
 1f6:	f8 01       	movw	r30, r16
 1f8:	81 91       	ld	r24, Z+
 1fa:	8f 01       	movw	r16, r30
 1fc:	81 11       	cpse	r24, r1
 1fe:	f8 cf       	rjmp	.-16     	; 0x1f0 <LCDString+0x16>
		LCDPutchar(*msg);
		msg++; 
		len++;
	}

	while(LCD_MAX_CHAR_IN_LINE - len)
 200:	c4 31       	cpi	r28, 0x14	; 20
 202:	11 f4       	brne	.+4      	; 0x208 <LCDString+0x2e>
 204:	07 c0       	rjmp	.+14     	; 0x214 <LCDString+0x3a>
}


void LCDString(char *msg)
{
	uint8_t len = 0;
 206:	c0 e0       	ldi	r28, 0x00	; 0



void LCDPutchar(char c)
{
	LCDSendData(c);
 208:	80 e2       	ldi	r24, 0x20	; 32
 20a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <LCDSendData>
	}

	while(LCD_MAX_CHAR_IN_LINE - len)
	{
		LCDPutchar(0x20); // Space
		len++;
 20e:	cf 5f       	subi	r28, 0xFF	; 255
		LCDPutchar(*msg);
		msg++; 
		len++;
	}

	while(LCD_MAX_CHAR_IN_LINE - len)
 210:	c4 31       	cpi	r28, 0x14	; 20
 212:	d1 f7       	brne	.-12     	; 0x208 <LCDString+0x2e>
	{
		LCDPutchar(0x20); // Space
		len++;
	}

}
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	08 95       	ret

0000021c <main>:
float adc_volt = 0;


int main(void)
{
	LCDInit(); // declare lcd data port and control port
 21c:	0e 94 9b 00 	call	0x136	; 0x136 <LCDInit>
    /* Replace with your application code */
	DDRC |= ((1<<0)|(1<<1)|(1<<2)|(1<<3));
 220:	84 b3       	in	r24, 0x14	; 20
 222:	8f 60       	ori	r24, 0x0F	; 15
 224:	84 bb       	out	0x14, r24	; 20
	LCDInit(); //Initialize LCD Display
 226:	0e 94 9b 00 	call	0x136	; 0x136 <LCDInit>
	adc_init();//Function call
 22a:	0e 94 49 00 	call	0x92	; 0x92 <adc_init>
	uint16_t adc_result=0;
	
	sprintf(line,"ADC Value : ");
 22e:	8d e0       	ldi	r24, 0x0D	; 13
 230:	e0 e6       	ldi	r30, 0x60	; 96
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	a8 e7       	ldi	r26, 0x78	; 120
 236:	b0 e0       	ldi	r27, 0x00	; 0
 238:	01 90       	ld	r0, Z+
 23a:	0d 92       	st	X+, r0
 23c:	8a 95       	dec	r24
 23e:	e1 f7       	brne	.-8      	; 0x238 <main+0x1c>
	LCDGotoXY(1,1);
 240:	61 e0       	ldi	r22, 0x01	; 1
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	0e 94 83 00 	call	0x106	; 0x106 <LCDGotoXY>
	LCDString(line);
 248:	88 e7       	ldi	r24, 0x78	; 120
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCDString>
	
	sprintf(line,"LIGH : ");
 250:	88 e0       	ldi	r24, 0x08	; 8
 252:	ed e6       	ldi	r30, 0x6D	; 109
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	a8 e7       	ldi	r26, 0x78	; 120
 258:	b0 e0       	ldi	r27, 0x00	; 0
 25a:	01 90       	ld	r0, Z+
 25c:	0d 92       	st	X+, r0
 25e:	8a 95       	dec	r24
 260:	e1 f7       	brne	.-8      	; 0x25a <main+0x3e>
	LCDGotoXY(1,2);
 262:	62 e0       	ldi	r22, 0x02	; 2
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	0e 94 83 00 	call	0x106	; 0x106 <LCDGotoXY>
	LCDString(line);
 26a:	88 e7       	ldi	r24, 0x78	; 120
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCDString>
    while (1) 
    {
		adc_result = 0;
		adc_result=adc_read();           // Read Analog value from channel-0
		
		sprintf(line,"%d", adc_result);
 272:	0f 2e       	mov	r0, r31
 274:	f5 e7       	ldi	r31, 0x75	; 117
 276:	ef 2e       	mov	r14, r31
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	ff 2e       	mov	r15, r31
 27c:	f0 2d       	mov	r31, r0
 27e:	c8 e7       	ldi	r28, 0x78	; 120
 280:	d0 e0       	ldi	r29, 0x00	; 0
			_delay_ms(500);
		}
		else
		{
			PORTC |= ((1<<0)|(1<<1)|(1<<2)|(1<<3));
			sprintf(line,"ON");
 282:	0f 2e       	mov	r0, r31
 284:	ff e4       	ldi	r31, 0x4F	; 79
 286:	af 2e       	mov	r10, r31
 288:	fe e4       	ldi	r31, 0x4E	; 78
 28a:	bf 2e       	mov	r11, r31
 28c:	f0 2d       	mov	r31, r0
		
		
		if (adc_result > 500)
		{
			PORTC &= ~((1<<0)|(1<<1)|(1<<2)|(1<<3));
			sprintf(line,"OFF");
 28e:	0f 2e       	mov	r0, r31
 290:	ff e4       	ldi	r31, 0x4F	; 79
 292:	cf 2e       	mov	r12, r31
 294:	f6 e4       	ldi	r31, 0x46	; 70
 296:	df 2e       	mov	r13, r31
 298:	f0 2d       	mov	r31, r0
 29a:	0f 2e       	mov	r0, r31
 29c:	f6 e4       	ldi	r31, 0x46	; 70
 29e:	8f 2e       	mov	r8, r31
 2a0:	91 2c       	mov	r9, r1
 2a2:	f0 2d       	mov	r31, r0
	LCDString(line);
	
    while (1) 
    {
		adc_result = 0;
		adc_result=adc_read();           // Read Analog value from channel-0
 2a4:	0e 94 50 00 	call	0xa0	; 0xa0 <adc_read>
 2a8:	8c 01       	movw	r16, r24
		
		sprintf(line,"%d", adc_result);
 2aa:	1f 93       	push	r17
 2ac:	8f 93       	push	r24
 2ae:	ff 92       	push	r15
 2b0:	ef 92       	push	r14
 2b2:	df 93       	push	r29
 2b4:	cf 93       	push	r28
 2b6:	0e 94 9c 01 	call	0x338	; 0x338 <sprintf>
		LCDGotoXY(13,1);
 2ba:	61 e0       	ldi	r22, 0x01	; 1
 2bc:	8d e0       	ldi	r24, 0x0D	; 13
 2be:	0e 94 83 00 	call	0x106	; 0x106 <LCDGotoXY>
		LCDString(line);
 2c2:	ce 01       	movw	r24, r28
 2c4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCDString>
		
		
		if (adc_result > 500)
 2c8:	0f 90       	pop	r0
 2ca:	0f 90       	pop	r0
 2cc:	0f 90       	pop	r0
 2ce:	0f 90       	pop	r0
 2d0:	0f 90       	pop	r0
 2d2:	0f 90       	pop	r0
 2d4:	05 3f       	cpi	r16, 0xF5	; 245
 2d6:	11 40       	sbci	r17, 0x01	; 1
 2d8:	c0 f0       	brcs	.+48     	; 0x30a <main+0xee>
		{
			PORTC &= ~((1<<0)|(1<<1)|(1<<2)|(1<<3));
 2da:	85 b3       	in	r24, 0x15	; 21
 2dc:	80 7f       	andi	r24, 0xF0	; 240
 2de:	85 bb       	out	0x15, r24	; 21
			sprintf(line,"OFF");
 2e0:	d9 82       	std	Y+1, r13	; 0x01
 2e2:	c8 82       	st	Y, r12
 2e4:	9b 82       	std	Y+3, r9	; 0x03
 2e6:	8a 82       	std	Y+2, r8	; 0x02
			LCDGotoXY(11,2);
 2e8:	62 e0       	ldi	r22, 0x02	; 2
 2ea:	8b e0       	ldi	r24, 0x0B	; 11
 2ec:	0e 94 83 00 	call	0x106	; 0x106 <LCDGotoXY>
			LCDString(line);
 2f0:	ce 01       	movw	r24, r28
 2f2:	0e 94 ed 00 	call	0x1da	; 0x1da <LCDString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f6:	2f ef       	ldi	r18, 0xFF	; 255
 2f8:	84 e3       	ldi	r24, 0x34	; 52
 2fa:	9c e0       	ldi	r25, 0x0C	; 12
 2fc:	21 50       	subi	r18, 0x01	; 1
 2fe:	80 40       	sbci	r24, 0x00	; 0
 300:	90 40       	sbci	r25, 0x00	; 0
 302:	e1 f7       	brne	.-8      	; 0x2fc <main+0xe0>
 304:	00 c0       	rjmp	.+0      	; 0x306 <main+0xea>
 306:	00 00       	nop
 308:	cd cf       	rjmp	.-102    	; 0x2a4 <main+0x88>
			
			_delay_ms(500);
		}
		else
		{
			PORTC |= ((1<<0)|(1<<1)|(1<<2)|(1<<3));
 30a:	85 b3       	in	r24, 0x15	; 21
 30c:	8f 60       	ori	r24, 0x0F	; 15
 30e:	85 bb       	out	0x15, r24	; 21
			sprintf(line,"ON");
 310:	b9 82       	std	Y+1, r11	; 0x01
 312:	a8 82       	st	Y, r10
 314:	1a 82       	std	Y+2, r1	; 0x02
			LCDGotoXY(11,2);
 316:	62 e0       	ldi	r22, 0x02	; 2
 318:	8b e0       	ldi	r24, 0x0B	; 11
 31a:	0e 94 83 00 	call	0x106	; 0x106 <LCDGotoXY>
			LCDString(line);
 31e:	ce 01       	movw	r24, r28
 320:	0e 94 ed 00 	call	0x1da	; 0x1da <LCDString>
 324:	2f ef       	ldi	r18, 0xFF	; 255
 326:	84 e3       	ldi	r24, 0x34	; 52
 328:	9c e0       	ldi	r25, 0x0C	; 12
 32a:	21 50       	subi	r18, 0x01	; 1
 32c:	80 40       	sbci	r24, 0x00	; 0
 32e:	90 40       	sbci	r25, 0x00	; 0
 330:	e1 f7       	brne	.-8      	; 0x32a <main+0x10e>
 332:	00 c0       	rjmp	.+0      	; 0x334 <main+0x118>
 334:	00 00       	nop
 336:	b6 cf       	rjmp	.-148    	; 0x2a4 <main+0x88>

00000338 <sprintf>:
 338:	ae e0       	ldi	r26, 0x0E	; 14
 33a:	b0 e0       	ldi	r27, 0x00	; 0
 33c:	e2 ea       	ldi	r30, 0xA2	; 162
 33e:	f1 e0       	ldi	r31, 0x01	; 1
 340:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__prologue_saves__+0x1c>
 344:	0d 89       	ldd	r16, Y+21	; 0x15
 346:	1e 89       	ldd	r17, Y+22	; 0x16
 348:	86 e0       	ldi	r24, 0x06	; 6
 34a:	8c 83       	std	Y+4, r24	; 0x04
 34c:	1a 83       	std	Y+2, r17	; 0x02
 34e:	09 83       	std	Y+1, r16	; 0x01
 350:	8f ef       	ldi	r24, 0xFF	; 255
 352:	9f e7       	ldi	r25, 0x7F	; 127
 354:	9e 83       	std	Y+6, r25	; 0x06
 356:	8d 83       	std	Y+5, r24	; 0x05
 358:	ae 01       	movw	r20, r28
 35a:	47 5e       	subi	r20, 0xE7	; 231
 35c:	5f 4f       	sbci	r21, 0xFF	; 255
 35e:	6f 89       	ldd	r22, Y+23	; 0x17
 360:	78 8d       	ldd	r23, Y+24	; 0x18
 362:	ce 01       	movw	r24, r28
 364:	01 96       	adiw	r24, 0x01	; 1
 366:	0e 94 be 01 	call	0x37c	; 0x37c <vfprintf>
 36a:	ef 81       	ldd	r30, Y+7	; 0x07
 36c:	f8 85       	ldd	r31, Y+8	; 0x08
 36e:	e0 0f       	add	r30, r16
 370:	f1 1f       	adc	r31, r17
 372:	10 82       	st	Z, r1
 374:	2e 96       	adiw	r28, 0x0e	; 14
 376:	e4 e0       	ldi	r30, 0x04	; 4
 378:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <__epilogue_restores__+0x1c>

0000037c <vfprintf>:
 37c:	ab e0       	ldi	r26, 0x0B	; 11
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	e4 ec       	ldi	r30, 0xC4	; 196
 382:	f1 e0       	ldi	r31, 0x01	; 1
 384:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__prologue_saves__>
 388:	6c 01       	movw	r12, r24
 38a:	7b 01       	movw	r14, r22
 38c:	8a 01       	movw	r16, r20
 38e:	fc 01       	movw	r30, r24
 390:	17 82       	std	Z+7, r1	; 0x07
 392:	16 82       	std	Z+6, r1	; 0x06
 394:	83 81       	ldd	r24, Z+3	; 0x03
 396:	81 ff       	sbrs	r24, 1
 398:	cc c1       	rjmp	.+920    	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 39a:	ce 01       	movw	r24, r28
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	3c 01       	movw	r6, r24
 3a0:	f6 01       	movw	r30, r12
 3a2:	93 81       	ldd	r25, Z+3	; 0x03
 3a4:	f7 01       	movw	r30, r14
 3a6:	93 fd       	sbrc	r25, 3
 3a8:	85 91       	lpm	r24, Z+
 3aa:	93 ff       	sbrs	r25, 3
 3ac:	81 91       	ld	r24, Z+
 3ae:	7f 01       	movw	r14, r30
 3b0:	88 23       	and	r24, r24
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <vfprintf+0x3a>
 3b4:	ba c1       	rjmp	.+884    	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 3b6:	85 32       	cpi	r24, 0x25	; 37
 3b8:	39 f4       	brne	.+14     	; 0x3c8 <vfprintf+0x4c>
 3ba:	93 fd       	sbrc	r25, 3
 3bc:	85 91       	lpm	r24, Z+
 3be:	93 ff       	sbrs	r25, 3
 3c0:	81 91       	ld	r24, Z+
 3c2:	7f 01       	movw	r14, r30
 3c4:	85 32       	cpi	r24, 0x25	; 37
 3c6:	29 f4       	brne	.+10     	; 0x3d2 <vfprintf+0x56>
 3c8:	b6 01       	movw	r22, r12
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 3d0:	e7 cf       	rjmp	.-50     	; 0x3a0 <vfprintf+0x24>
 3d2:	91 2c       	mov	r9, r1
 3d4:	21 2c       	mov	r2, r1
 3d6:	31 2c       	mov	r3, r1
 3d8:	ff e1       	ldi	r31, 0x1F	; 31
 3da:	f3 15       	cp	r31, r3
 3dc:	d8 f0       	brcs	.+54     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3de:	8b 32       	cpi	r24, 0x2B	; 43
 3e0:	79 f0       	breq	.+30     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e2:	38 f4       	brcc	.+14     	; 0x3f2 <vfprintf+0x76>
 3e4:	80 32       	cpi	r24, 0x20	; 32
 3e6:	79 f0       	breq	.+30     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e8:	83 32       	cpi	r24, 0x23	; 35
 3ea:	a1 f4       	brne	.+40     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3ec:	23 2d       	mov	r18, r3
 3ee:	20 61       	ori	r18, 0x10	; 16
 3f0:	1d c0       	rjmp	.+58     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3f2:	8d 32       	cpi	r24, 0x2D	; 45
 3f4:	61 f0       	breq	.+24     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f6:	80 33       	cpi	r24, 0x30	; 48
 3f8:	69 f4       	brne	.+26     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3fa:	23 2d       	mov	r18, r3
 3fc:	21 60       	ori	r18, 0x01	; 1
 3fe:	16 c0       	rjmp	.+44     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 400:	83 2d       	mov	r24, r3
 402:	82 60       	ori	r24, 0x02	; 2
 404:	38 2e       	mov	r3, r24
 406:	e3 2d       	mov	r30, r3
 408:	e4 60       	ori	r30, 0x04	; 4
 40a:	3e 2e       	mov	r3, r30
 40c:	2a c0       	rjmp	.+84     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 40e:	f3 2d       	mov	r31, r3
 410:	f8 60       	ori	r31, 0x08	; 8
 412:	1d c0       	rjmp	.+58     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 414:	37 fc       	sbrc	r3, 7
 416:	2d c0       	rjmp	.+90     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 418:	20 ed       	ldi	r18, 0xD0	; 208
 41a:	28 0f       	add	r18, r24
 41c:	2a 30       	cpi	r18, 0x0A	; 10
 41e:	40 f0       	brcs	.+16     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 420:	8e 32       	cpi	r24, 0x2E	; 46
 422:	b9 f4       	brne	.+46     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 424:	36 fc       	sbrc	r3, 6
 426:	81 c1       	rjmp	.+770    	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 428:	23 2d       	mov	r18, r3
 42a:	20 64       	ori	r18, 0x40	; 64
 42c:	32 2e       	mov	r3, r18
 42e:	19 c0       	rjmp	.+50     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 430:	36 fe       	sbrs	r3, 6
 432:	06 c0       	rjmp	.+12     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 434:	8a e0       	ldi	r24, 0x0A	; 10
 436:	98 9e       	mul	r9, r24
 438:	20 0d       	add	r18, r0
 43a:	11 24       	eor	r1, r1
 43c:	92 2e       	mov	r9, r18
 43e:	11 c0       	rjmp	.+34     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 440:	ea e0       	ldi	r30, 0x0A	; 10
 442:	2e 9e       	mul	r2, r30
 444:	20 0d       	add	r18, r0
 446:	11 24       	eor	r1, r1
 448:	22 2e       	mov	r2, r18
 44a:	f3 2d       	mov	r31, r3
 44c:	f0 62       	ori	r31, 0x20	; 32
 44e:	3f 2e       	mov	r3, r31
 450:	08 c0       	rjmp	.+16     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 452:	8c 36       	cpi	r24, 0x6C	; 108
 454:	21 f4       	brne	.+8      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 456:	83 2d       	mov	r24, r3
 458:	80 68       	ori	r24, 0x80	; 128
 45a:	38 2e       	mov	r3, r24
 45c:	02 c0       	rjmp	.+4      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45e:	88 36       	cpi	r24, 0x68	; 104
 460:	41 f4       	brne	.+16     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 462:	f7 01       	movw	r30, r14
 464:	93 fd       	sbrc	r25, 3
 466:	85 91       	lpm	r24, Z+
 468:	93 ff       	sbrs	r25, 3
 46a:	81 91       	ld	r24, Z+
 46c:	7f 01       	movw	r14, r30
 46e:	81 11       	cpse	r24, r1
 470:	b3 cf       	rjmp	.-154    	; 0x3d8 <vfprintf+0x5c>
 472:	98 2f       	mov	r25, r24
 474:	9f 7d       	andi	r25, 0xDF	; 223
 476:	95 54       	subi	r25, 0x45	; 69
 478:	93 30       	cpi	r25, 0x03	; 3
 47a:	28 f4       	brcc	.+10     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47c:	0c 5f       	subi	r16, 0xFC	; 252
 47e:	1f 4f       	sbci	r17, 0xFF	; 255
 480:	9f e3       	ldi	r25, 0x3F	; 63
 482:	99 83       	std	Y+1, r25	; 0x01
 484:	0d c0       	rjmp	.+26     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 486:	83 36       	cpi	r24, 0x63	; 99
 488:	31 f0       	breq	.+12     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 48a:	83 37       	cpi	r24, 0x73	; 115
 48c:	71 f0       	breq	.+28     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 48e:	83 35       	cpi	r24, 0x53	; 83
 490:	09 f0       	breq	.+2      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 492:	59 c0       	rjmp	.+178    	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 494:	21 c0       	rjmp	.+66     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 496:	f8 01       	movw	r30, r16
 498:	80 81       	ld	r24, Z
 49a:	89 83       	std	Y+1, r24	; 0x01
 49c:	0e 5f       	subi	r16, 0xFE	; 254
 49e:	1f 4f       	sbci	r17, 0xFF	; 255
 4a0:	88 24       	eor	r8, r8
 4a2:	83 94       	inc	r8
 4a4:	91 2c       	mov	r9, r1
 4a6:	53 01       	movw	r10, r6
 4a8:	13 c0       	rjmp	.+38     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4aa:	28 01       	movw	r4, r16
 4ac:	f2 e0       	ldi	r31, 0x02	; 2
 4ae:	4f 0e       	add	r4, r31
 4b0:	51 1c       	adc	r5, r1
 4b2:	f8 01       	movw	r30, r16
 4b4:	a0 80       	ld	r10, Z
 4b6:	b1 80       	ldd	r11, Z+1	; 0x01
 4b8:	36 fe       	sbrs	r3, 6
 4ba:	03 c0       	rjmp	.+6      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4bc:	69 2d       	mov	r22, r9
 4be:	70 e0       	ldi	r23, 0x00	; 0
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c2:	6f ef       	ldi	r22, 0xFF	; 255
 4c4:	7f ef       	ldi	r23, 0xFF	; 255
 4c6:	c5 01       	movw	r24, r10
 4c8:	0e 94 aa 03 	call	0x754	; 0x754 <strnlen>
 4cc:	4c 01       	movw	r8, r24
 4ce:	82 01       	movw	r16, r4
 4d0:	f3 2d       	mov	r31, r3
 4d2:	ff 77       	andi	r31, 0x7F	; 127
 4d4:	3f 2e       	mov	r3, r31
 4d6:	16 c0       	rjmp	.+44     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4d8:	28 01       	movw	r4, r16
 4da:	22 e0       	ldi	r18, 0x02	; 2
 4dc:	42 0e       	add	r4, r18
 4de:	51 1c       	adc	r5, r1
 4e0:	f8 01       	movw	r30, r16
 4e2:	a0 80       	ld	r10, Z
 4e4:	b1 80       	ldd	r11, Z+1	; 0x01
 4e6:	36 fe       	sbrs	r3, 6
 4e8:	03 c0       	rjmp	.+6      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4ea:	69 2d       	mov	r22, r9
 4ec:	70 e0       	ldi	r23, 0x00	; 0
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4f0:	6f ef       	ldi	r22, 0xFF	; 255
 4f2:	7f ef       	ldi	r23, 0xFF	; 255
 4f4:	c5 01       	movw	r24, r10
 4f6:	0e 94 9f 03 	call	0x73e	; 0x73e <strnlen_P>
 4fa:	4c 01       	movw	r8, r24
 4fc:	f3 2d       	mov	r31, r3
 4fe:	f0 68       	ori	r31, 0x80	; 128
 500:	3f 2e       	mov	r3, r31
 502:	82 01       	movw	r16, r4
 504:	33 fc       	sbrc	r3, 3
 506:	1b c0       	rjmp	.+54     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 508:	82 2d       	mov	r24, r2
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	88 16       	cp	r8, r24
 50e:	99 06       	cpc	r9, r25
 510:	b0 f4       	brcc	.+44     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 512:	b6 01       	movw	r22, r12
 514:	80 e2       	ldi	r24, 0x20	; 32
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 51c:	2a 94       	dec	r2
 51e:	f4 cf       	rjmp	.-24     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 520:	f5 01       	movw	r30, r10
 522:	37 fc       	sbrc	r3, 7
 524:	85 91       	lpm	r24, Z+
 526:	37 fe       	sbrs	r3, 7
 528:	81 91       	ld	r24, Z+
 52a:	5f 01       	movw	r10, r30
 52c:	b6 01       	movw	r22, r12
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 534:	21 10       	cpse	r2, r1
 536:	2a 94       	dec	r2
 538:	21 e0       	ldi	r18, 0x01	; 1
 53a:	82 1a       	sub	r8, r18
 53c:	91 08       	sbc	r9, r1
 53e:	81 14       	cp	r8, r1
 540:	91 04       	cpc	r9, r1
 542:	71 f7       	brne	.-36     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 544:	e8 c0       	rjmp	.+464    	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 546:	84 36       	cpi	r24, 0x64	; 100
 548:	11 f0       	breq	.+4      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 54a:	89 36       	cpi	r24, 0x69	; 105
 54c:	41 f5       	brne	.+80     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 54e:	f8 01       	movw	r30, r16
 550:	37 fe       	sbrs	r3, 7
 552:	07 c0       	rjmp	.+14     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 554:	60 81       	ld	r22, Z
 556:	71 81       	ldd	r23, Z+1	; 0x01
 558:	82 81       	ldd	r24, Z+2	; 0x02
 55a:	93 81       	ldd	r25, Z+3	; 0x03
 55c:	0c 5f       	subi	r16, 0xFC	; 252
 55e:	1f 4f       	sbci	r17, 0xFF	; 255
 560:	08 c0       	rjmp	.+16     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 562:	60 81       	ld	r22, Z
 564:	71 81       	ldd	r23, Z+1	; 0x01
 566:	07 2e       	mov	r0, r23
 568:	00 0c       	add	r0, r0
 56a:	88 0b       	sbc	r24, r24
 56c:	99 0b       	sbc	r25, r25
 56e:	0e 5f       	subi	r16, 0xFE	; 254
 570:	1f 4f       	sbci	r17, 0xFF	; 255
 572:	f3 2d       	mov	r31, r3
 574:	ff 76       	andi	r31, 0x6F	; 111
 576:	3f 2e       	mov	r3, r31
 578:	97 ff       	sbrs	r25, 7
 57a:	09 c0       	rjmp	.+18     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 57c:	90 95       	com	r25
 57e:	80 95       	com	r24
 580:	70 95       	com	r23
 582:	61 95       	neg	r22
 584:	7f 4f       	sbci	r23, 0xFF	; 255
 586:	8f 4f       	sbci	r24, 0xFF	; 255
 588:	9f 4f       	sbci	r25, 0xFF	; 255
 58a:	f0 68       	ori	r31, 0x80	; 128
 58c:	3f 2e       	mov	r3, r31
 58e:	2a e0       	ldi	r18, 0x0A	; 10
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	a3 01       	movw	r20, r6
 594:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__ultoa_invert>
 598:	88 2e       	mov	r8, r24
 59a:	86 18       	sub	r8, r6
 59c:	45 c0       	rjmp	.+138    	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 59e:	85 37       	cpi	r24, 0x75	; 117
 5a0:	31 f4       	brne	.+12     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5a2:	23 2d       	mov	r18, r3
 5a4:	2f 7e       	andi	r18, 0xEF	; 239
 5a6:	b2 2e       	mov	r11, r18
 5a8:	2a e0       	ldi	r18, 0x0A	; 10
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	25 c0       	rjmp	.+74     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5ae:	93 2d       	mov	r25, r3
 5b0:	99 7f       	andi	r25, 0xF9	; 249
 5b2:	b9 2e       	mov	r11, r25
 5b4:	8f 36       	cpi	r24, 0x6F	; 111
 5b6:	c1 f0       	breq	.+48     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5b8:	18 f4       	brcc	.+6      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5ba:	88 35       	cpi	r24, 0x58	; 88
 5bc:	79 f0       	breq	.+30     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5be:	b5 c0       	rjmp	.+362    	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 5c0:	80 37       	cpi	r24, 0x70	; 112
 5c2:	19 f0       	breq	.+6      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c4:	88 37       	cpi	r24, 0x78	; 120
 5c6:	21 f0       	breq	.+8      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5c8:	b0 c0       	rjmp	.+352    	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 5ca:	e9 2f       	mov	r30, r25
 5cc:	e0 61       	ori	r30, 0x10	; 16
 5ce:	be 2e       	mov	r11, r30
 5d0:	b4 fe       	sbrs	r11, 4
 5d2:	0d c0       	rjmp	.+26     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5d4:	fb 2d       	mov	r31, r11
 5d6:	f4 60       	ori	r31, 0x04	; 4
 5d8:	bf 2e       	mov	r11, r31
 5da:	09 c0       	rjmp	.+18     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5dc:	34 fe       	sbrs	r3, 4
 5de:	0a c0       	rjmp	.+20     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e0:	29 2f       	mov	r18, r25
 5e2:	26 60       	ori	r18, 0x06	; 6
 5e4:	b2 2e       	mov	r11, r18
 5e6:	06 c0       	rjmp	.+12     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e8:	28 e0       	ldi	r18, 0x08	; 8
 5ea:	30 e0       	ldi	r19, 0x00	; 0
 5ec:	05 c0       	rjmp	.+10     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5ee:	20 e1       	ldi	r18, 0x10	; 16
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5f4:	20 e1       	ldi	r18, 0x10	; 16
 5f6:	32 e0       	ldi	r19, 0x02	; 2
 5f8:	f8 01       	movw	r30, r16
 5fa:	b7 fe       	sbrs	r11, 7
 5fc:	07 c0       	rjmp	.+14     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5fe:	60 81       	ld	r22, Z
 600:	71 81       	ldd	r23, Z+1	; 0x01
 602:	82 81       	ldd	r24, Z+2	; 0x02
 604:	93 81       	ldd	r25, Z+3	; 0x03
 606:	0c 5f       	subi	r16, 0xFC	; 252
 608:	1f 4f       	sbci	r17, 0xFF	; 255
 60a:	06 c0       	rjmp	.+12     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60c:	60 81       	ld	r22, Z
 60e:	71 81       	ldd	r23, Z+1	; 0x01
 610:	80 e0       	ldi	r24, 0x00	; 0
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 5f       	subi	r16, 0xFE	; 254
 616:	1f 4f       	sbci	r17, 0xFF	; 255
 618:	a3 01       	movw	r20, r6
 61a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__ultoa_invert>
 61e:	88 2e       	mov	r8, r24
 620:	86 18       	sub	r8, r6
 622:	fb 2d       	mov	r31, r11
 624:	ff 77       	andi	r31, 0x7F	; 127
 626:	3f 2e       	mov	r3, r31
 628:	36 fe       	sbrs	r3, 6
 62a:	0d c0       	rjmp	.+26     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 62c:	23 2d       	mov	r18, r3
 62e:	2e 7f       	andi	r18, 0xFE	; 254
 630:	a2 2e       	mov	r10, r18
 632:	89 14       	cp	r8, r9
 634:	58 f4       	brcc	.+22     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 636:	34 fe       	sbrs	r3, 4
 638:	0b c0       	rjmp	.+22     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 63a:	32 fc       	sbrc	r3, 2
 63c:	09 c0       	rjmp	.+18     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 63e:	83 2d       	mov	r24, r3
 640:	8e 7e       	andi	r24, 0xEE	; 238
 642:	a8 2e       	mov	r10, r24
 644:	05 c0       	rjmp	.+10     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 646:	b8 2c       	mov	r11, r8
 648:	a3 2c       	mov	r10, r3
 64a:	03 c0       	rjmp	.+6      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 64c:	b8 2c       	mov	r11, r8
 64e:	01 c0       	rjmp	.+2      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 650:	b9 2c       	mov	r11, r9
 652:	a4 fe       	sbrs	r10, 4
 654:	0f c0       	rjmp	.+30     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 656:	fe 01       	movw	r30, r28
 658:	e8 0d       	add	r30, r8
 65a:	f1 1d       	adc	r31, r1
 65c:	80 81       	ld	r24, Z
 65e:	80 33       	cpi	r24, 0x30	; 48
 660:	21 f4       	brne	.+8      	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 662:	9a 2d       	mov	r25, r10
 664:	99 7e       	andi	r25, 0xE9	; 233
 666:	a9 2e       	mov	r10, r25
 668:	09 c0       	rjmp	.+18     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 66a:	a2 fe       	sbrs	r10, 2
 66c:	06 c0       	rjmp	.+12     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 66e:	b3 94       	inc	r11
 670:	b3 94       	inc	r11
 672:	04 c0       	rjmp	.+8      	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 674:	8a 2d       	mov	r24, r10
 676:	86 78       	andi	r24, 0x86	; 134
 678:	09 f0       	breq	.+2      	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 67a:	b3 94       	inc	r11
 67c:	a3 fc       	sbrc	r10, 3
 67e:	11 c0       	rjmp	.+34     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 680:	a0 fe       	sbrs	r10, 0
 682:	06 c0       	rjmp	.+12     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 684:	b2 14       	cp	r11, r2
 686:	88 f4       	brcc	.+34     	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 688:	28 0c       	add	r2, r8
 68a:	92 2c       	mov	r9, r2
 68c:	9b 18       	sub	r9, r11
 68e:	0e c0       	rjmp	.+28     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 690:	b2 14       	cp	r11, r2
 692:	60 f4       	brcc	.+24     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 694:	b6 01       	movw	r22, r12
 696:	80 e2       	ldi	r24, 0x20	; 32
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 69e:	b3 94       	inc	r11
 6a0:	f7 cf       	rjmp	.-18     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 6a2:	b2 14       	cp	r11, r2
 6a4:	18 f4       	brcc	.+6      	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 6a6:	2b 18       	sub	r2, r11
 6a8:	02 c0       	rjmp	.+4      	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 6aa:	98 2c       	mov	r9, r8
 6ac:	21 2c       	mov	r2, r1
 6ae:	a4 fe       	sbrs	r10, 4
 6b0:	10 c0       	rjmp	.+32     	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6b2:	b6 01       	movw	r22, r12
 6b4:	80 e3       	ldi	r24, 0x30	; 48
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 6bc:	a2 fe       	sbrs	r10, 2
 6be:	17 c0       	rjmp	.+46     	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6c0:	a1 fc       	sbrc	r10, 1
 6c2:	03 c0       	rjmp	.+6      	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6c4:	88 e7       	ldi	r24, 0x78	; 120
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6ca:	88 e5       	ldi	r24, 0x58	; 88
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	b6 01       	movw	r22, r12
 6d0:	0c c0       	rjmp	.+24     	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6d2:	8a 2d       	mov	r24, r10
 6d4:	86 78       	andi	r24, 0x86	; 134
 6d6:	59 f0       	breq	.+22     	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6d8:	a1 fe       	sbrs	r10, 1
 6da:	02 c0       	rjmp	.+4      	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6dc:	8b e2       	ldi	r24, 0x2B	; 43
 6de:	01 c0       	rjmp	.+2      	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6e0:	80 e2       	ldi	r24, 0x20	; 32
 6e2:	a7 fc       	sbrc	r10, 7
 6e4:	8d e2       	ldi	r24, 0x2D	; 45
 6e6:	b6 01       	movw	r22, r12
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 6ee:	89 14       	cp	r8, r9
 6f0:	38 f4       	brcc	.+14     	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6f2:	b6 01       	movw	r22, r12
 6f4:	80 e3       	ldi	r24, 0x30	; 48
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 6fc:	9a 94       	dec	r9
 6fe:	f7 cf       	rjmp	.-18     	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 700:	8a 94       	dec	r8
 702:	f3 01       	movw	r30, r6
 704:	e8 0d       	add	r30, r8
 706:	f1 1d       	adc	r31, r1
 708:	80 81       	ld	r24, Z
 70a:	b6 01       	movw	r22, r12
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 712:	81 10       	cpse	r8, r1
 714:	f5 cf       	rjmp	.-22     	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 716:	22 20       	and	r2, r2
 718:	09 f4       	brne	.+2      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 71a:	42 ce       	rjmp	.-892    	; 0x3a0 <vfprintf+0x24>
 71c:	b6 01       	movw	r22, r12
 71e:	80 e2       	ldi	r24, 0x20	; 32
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	0e 94 b5 03 	call	0x76a	; 0x76a <fputc>
 726:	2a 94       	dec	r2
 728:	f6 cf       	rjmp	.-20     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 72a:	f6 01       	movw	r30, r12
 72c:	86 81       	ldd	r24, Z+6	; 0x06
 72e:	97 81       	ldd	r25, Z+7	; 0x07
 730:	02 c0       	rjmp	.+4      	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 732:	8f ef       	ldi	r24, 0xFF	; 255
 734:	9f ef       	ldi	r25, 0xFF	; 255
 736:	2b 96       	adiw	r28, 0x0b	; 11
 738:	e2 e1       	ldi	r30, 0x12	; 18
 73a:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <__epilogue_restores__>

0000073e <strnlen_P>:
 73e:	fc 01       	movw	r30, r24
 740:	05 90       	lpm	r0, Z+
 742:	61 50       	subi	r22, 0x01	; 1
 744:	70 40       	sbci	r23, 0x00	; 0
 746:	01 10       	cpse	r0, r1
 748:	d8 f7       	brcc	.-10     	; 0x740 <strnlen_P+0x2>
 74a:	80 95       	com	r24
 74c:	90 95       	com	r25
 74e:	8e 0f       	add	r24, r30
 750:	9f 1f       	adc	r25, r31
 752:	08 95       	ret

00000754 <strnlen>:
 754:	fc 01       	movw	r30, r24
 756:	61 50       	subi	r22, 0x01	; 1
 758:	70 40       	sbci	r23, 0x00	; 0
 75a:	01 90       	ld	r0, Z+
 75c:	01 10       	cpse	r0, r1
 75e:	d8 f7       	brcc	.-10     	; 0x756 <strnlen+0x2>
 760:	80 95       	com	r24
 762:	90 95       	com	r25
 764:	8e 0f       	add	r24, r30
 766:	9f 1f       	adc	r25, r31
 768:	08 95       	ret

0000076a <fputc>:
 76a:	0f 93       	push	r16
 76c:	1f 93       	push	r17
 76e:	cf 93       	push	r28
 770:	df 93       	push	r29
 772:	fb 01       	movw	r30, r22
 774:	23 81       	ldd	r18, Z+3	; 0x03
 776:	21 fd       	sbrc	r18, 1
 778:	03 c0       	rjmp	.+6      	; 0x780 <fputc+0x16>
 77a:	8f ef       	ldi	r24, 0xFF	; 255
 77c:	9f ef       	ldi	r25, 0xFF	; 255
 77e:	2c c0       	rjmp	.+88     	; 0x7d8 <fputc+0x6e>
 780:	22 ff       	sbrs	r18, 2
 782:	16 c0       	rjmp	.+44     	; 0x7b0 <fputc+0x46>
 784:	46 81       	ldd	r20, Z+6	; 0x06
 786:	57 81       	ldd	r21, Z+7	; 0x07
 788:	24 81       	ldd	r18, Z+4	; 0x04
 78a:	35 81       	ldd	r19, Z+5	; 0x05
 78c:	42 17       	cp	r20, r18
 78e:	53 07       	cpc	r21, r19
 790:	44 f4       	brge	.+16     	; 0x7a2 <fputc+0x38>
 792:	a0 81       	ld	r26, Z
 794:	b1 81       	ldd	r27, Z+1	; 0x01
 796:	9d 01       	movw	r18, r26
 798:	2f 5f       	subi	r18, 0xFF	; 255
 79a:	3f 4f       	sbci	r19, 0xFF	; 255
 79c:	31 83       	std	Z+1, r19	; 0x01
 79e:	20 83       	st	Z, r18
 7a0:	8c 93       	st	X, r24
 7a2:	26 81       	ldd	r18, Z+6	; 0x06
 7a4:	37 81       	ldd	r19, Z+7	; 0x07
 7a6:	2f 5f       	subi	r18, 0xFF	; 255
 7a8:	3f 4f       	sbci	r19, 0xFF	; 255
 7aa:	37 83       	std	Z+7, r19	; 0x07
 7ac:	26 83       	std	Z+6, r18	; 0x06
 7ae:	14 c0       	rjmp	.+40     	; 0x7d8 <fputc+0x6e>
 7b0:	8b 01       	movw	r16, r22
 7b2:	ec 01       	movw	r28, r24
 7b4:	fb 01       	movw	r30, r22
 7b6:	00 84       	ldd	r0, Z+8	; 0x08
 7b8:	f1 85       	ldd	r31, Z+9	; 0x09
 7ba:	e0 2d       	mov	r30, r0
 7bc:	09 95       	icall
 7be:	89 2b       	or	r24, r25
 7c0:	e1 f6       	brne	.-72     	; 0x77a <fputc+0x10>
 7c2:	d8 01       	movw	r26, r16
 7c4:	16 96       	adiw	r26, 0x06	; 6
 7c6:	8d 91       	ld	r24, X+
 7c8:	9c 91       	ld	r25, X
 7ca:	17 97       	sbiw	r26, 0x07	; 7
 7cc:	01 96       	adiw	r24, 0x01	; 1
 7ce:	17 96       	adiw	r26, 0x07	; 7
 7d0:	9c 93       	st	X, r25
 7d2:	8e 93       	st	-X, r24
 7d4:	16 97       	sbiw	r26, 0x06	; 6
 7d6:	ce 01       	movw	r24, r28
 7d8:	df 91       	pop	r29
 7da:	cf 91       	pop	r28
 7dc:	1f 91       	pop	r17
 7de:	0f 91       	pop	r16
 7e0:	08 95       	ret

000007e2 <__ultoa_invert>:
 7e2:	fa 01       	movw	r30, r20
 7e4:	aa 27       	eor	r26, r26
 7e6:	28 30       	cpi	r18, 0x08	; 8
 7e8:	51 f1       	breq	.+84     	; 0x83e <__ultoa_invert+0x5c>
 7ea:	20 31       	cpi	r18, 0x10	; 16
 7ec:	81 f1       	breq	.+96     	; 0x84e <__ultoa_invert+0x6c>
 7ee:	e8 94       	clt
 7f0:	6f 93       	push	r22
 7f2:	6e 7f       	andi	r22, 0xFE	; 254
 7f4:	6e 5f       	subi	r22, 0xFE	; 254
 7f6:	7f 4f       	sbci	r23, 0xFF	; 255
 7f8:	8f 4f       	sbci	r24, 0xFF	; 255
 7fa:	9f 4f       	sbci	r25, 0xFF	; 255
 7fc:	af 4f       	sbci	r26, 0xFF	; 255
 7fe:	b1 e0       	ldi	r27, 0x01	; 1
 800:	3e d0       	rcall	.+124    	; 0x87e <__stack+0x1f>
 802:	b4 e0       	ldi	r27, 0x04	; 4
 804:	3c d0       	rcall	.+120    	; 0x87e <__stack+0x1f>
 806:	67 0f       	add	r22, r23
 808:	78 1f       	adc	r23, r24
 80a:	89 1f       	adc	r24, r25
 80c:	9a 1f       	adc	r25, r26
 80e:	a1 1d       	adc	r26, r1
 810:	68 0f       	add	r22, r24
 812:	79 1f       	adc	r23, r25
 814:	8a 1f       	adc	r24, r26
 816:	91 1d       	adc	r25, r1
 818:	a1 1d       	adc	r26, r1
 81a:	6a 0f       	add	r22, r26
 81c:	71 1d       	adc	r23, r1
 81e:	81 1d       	adc	r24, r1
 820:	91 1d       	adc	r25, r1
 822:	a1 1d       	adc	r26, r1
 824:	20 d0       	rcall	.+64     	; 0x866 <__stack+0x7>
 826:	09 f4       	brne	.+2      	; 0x82a <__ultoa_invert+0x48>
 828:	68 94       	set
 82a:	3f 91       	pop	r19
 82c:	2a e0       	ldi	r18, 0x0A	; 10
 82e:	26 9f       	mul	r18, r22
 830:	11 24       	eor	r1, r1
 832:	30 19       	sub	r19, r0
 834:	30 5d       	subi	r19, 0xD0	; 208
 836:	31 93       	st	Z+, r19
 838:	de f6       	brtc	.-74     	; 0x7f0 <__ultoa_invert+0xe>
 83a:	cf 01       	movw	r24, r30
 83c:	08 95       	ret
 83e:	46 2f       	mov	r20, r22
 840:	47 70       	andi	r20, 0x07	; 7
 842:	40 5d       	subi	r20, 0xD0	; 208
 844:	41 93       	st	Z+, r20
 846:	b3 e0       	ldi	r27, 0x03	; 3
 848:	0f d0       	rcall	.+30     	; 0x868 <__stack+0x9>
 84a:	c9 f7       	brne	.-14     	; 0x83e <__ultoa_invert+0x5c>
 84c:	f6 cf       	rjmp	.-20     	; 0x83a <__ultoa_invert+0x58>
 84e:	46 2f       	mov	r20, r22
 850:	4f 70       	andi	r20, 0x0F	; 15
 852:	40 5d       	subi	r20, 0xD0	; 208
 854:	4a 33       	cpi	r20, 0x3A	; 58
 856:	18 f0       	brcs	.+6      	; 0x85e <__ultoa_invert+0x7c>
 858:	49 5d       	subi	r20, 0xD9	; 217
 85a:	31 fd       	sbrc	r19, 1
 85c:	40 52       	subi	r20, 0x20	; 32
 85e:	41 93       	st	Z+, r20
 860:	02 d0       	rcall	.+4      	; 0x866 <__stack+0x7>
 862:	a9 f7       	brne	.-22     	; 0x84e <__ultoa_invert+0x6c>
 864:	ea cf       	rjmp	.-44     	; 0x83a <__ultoa_invert+0x58>
 866:	b4 e0       	ldi	r27, 0x04	; 4
 868:	a6 95       	lsr	r26
 86a:	97 95       	ror	r25
 86c:	87 95       	ror	r24
 86e:	77 95       	ror	r23
 870:	67 95       	ror	r22
 872:	ba 95       	dec	r27
 874:	c9 f7       	brne	.-14     	; 0x868 <__stack+0x9>
 876:	00 97       	sbiw	r24, 0x00	; 0
 878:	61 05       	cpc	r22, r1
 87a:	71 05       	cpc	r23, r1
 87c:	08 95       	ret
 87e:	9b 01       	movw	r18, r22
 880:	ac 01       	movw	r20, r24
 882:	0a 2e       	mov	r0, r26
 884:	06 94       	lsr	r0
 886:	57 95       	ror	r21
 888:	47 95       	ror	r20
 88a:	37 95       	ror	r19
 88c:	27 95       	ror	r18
 88e:	ba 95       	dec	r27
 890:	c9 f7       	brne	.-14     	; 0x884 <__stack+0x25>
 892:	62 0f       	add	r22, r18
 894:	73 1f       	adc	r23, r19
 896:	84 1f       	adc	r24, r20
 898:	95 1f       	adc	r25, r21
 89a:	a0 1d       	adc	r26, r0
 89c:	08 95       	ret

0000089e <__prologue_saves__>:
 89e:	2f 92       	push	r2
 8a0:	3f 92       	push	r3
 8a2:	4f 92       	push	r4
 8a4:	5f 92       	push	r5
 8a6:	6f 92       	push	r6
 8a8:	7f 92       	push	r7
 8aa:	8f 92       	push	r8
 8ac:	9f 92       	push	r9
 8ae:	af 92       	push	r10
 8b0:	bf 92       	push	r11
 8b2:	cf 92       	push	r12
 8b4:	df 92       	push	r13
 8b6:	ef 92       	push	r14
 8b8:	ff 92       	push	r15
 8ba:	0f 93       	push	r16
 8bc:	1f 93       	push	r17
 8be:	cf 93       	push	r28
 8c0:	df 93       	push	r29
 8c2:	cd b7       	in	r28, 0x3d	; 61
 8c4:	de b7       	in	r29, 0x3e	; 62
 8c6:	ca 1b       	sub	r28, r26
 8c8:	db 0b       	sbc	r29, r27
 8ca:	0f b6       	in	r0, 0x3f	; 63
 8cc:	f8 94       	cli
 8ce:	de bf       	out	0x3e, r29	; 62
 8d0:	0f be       	out	0x3f, r0	; 63
 8d2:	cd bf       	out	0x3d, r28	; 61
 8d4:	09 94       	ijmp

000008d6 <__epilogue_restores__>:
 8d6:	2a 88       	ldd	r2, Y+18	; 0x12
 8d8:	39 88       	ldd	r3, Y+17	; 0x11
 8da:	48 88       	ldd	r4, Y+16	; 0x10
 8dc:	5f 84       	ldd	r5, Y+15	; 0x0f
 8de:	6e 84       	ldd	r6, Y+14	; 0x0e
 8e0:	7d 84       	ldd	r7, Y+13	; 0x0d
 8e2:	8c 84       	ldd	r8, Y+12	; 0x0c
 8e4:	9b 84       	ldd	r9, Y+11	; 0x0b
 8e6:	aa 84       	ldd	r10, Y+10	; 0x0a
 8e8:	b9 84       	ldd	r11, Y+9	; 0x09
 8ea:	c8 84       	ldd	r12, Y+8	; 0x08
 8ec:	df 80       	ldd	r13, Y+7	; 0x07
 8ee:	ee 80       	ldd	r14, Y+6	; 0x06
 8f0:	fd 80       	ldd	r15, Y+5	; 0x05
 8f2:	0c 81       	ldd	r16, Y+4	; 0x04
 8f4:	1b 81       	ldd	r17, Y+3	; 0x03
 8f6:	aa 81       	ldd	r26, Y+2	; 0x02
 8f8:	b9 81       	ldd	r27, Y+1	; 0x01
 8fa:	ce 0f       	add	r28, r30
 8fc:	d1 1d       	adc	r29, r1
 8fe:	0f b6       	in	r0, 0x3f	; 63
 900:	f8 94       	cli
 902:	de bf       	out	0x3e, r29	; 62
 904:	0f be       	out	0x3f, r0	; 63
 906:	cd bf       	out	0x3d, r28	; 61
 908:	ed 01       	movw	r28, r26
 90a:	08 95       	ret

0000090c <_exit>:
 90c:	f8 94       	cli

0000090e <__stop_program>:
 90e:	ff cf       	rjmp	.-2      	; 0x90e <__stop_program>
