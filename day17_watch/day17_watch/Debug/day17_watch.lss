
day17_watch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000900  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000900  00000994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000016  00800074  00800074  000009a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d26  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f0  00000000  00000000  000017fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000648  00000000  00000000  00001eee  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  00002538  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cc  00000000  00000000  00002688  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000069a  00000000  00000000  00002a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000030ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e0       	ldi	r30, 0x00	; 0
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 e7       	ldi	r26, 0x74	; 116
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 38       	cpi	r26, 0x8A	; 138
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 64 01 	call	0x2c8	; 0x2c8 <main>
  8a:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCDSendCmd4BIT>:



void LCDPutchar(char c)
{
	LCDSendData(c);
  92:	80 ff       	sbrs	r24, 0
  94:	02 c0       	rjmp	.+4      	; 0x9a <LCDSendCmd4BIT+0x8>
  96:	ac 9a       	sbi	0x15, 4	; 21
  98:	01 c0       	rjmp	.+2      	; 0x9c <LCDSendCmd4BIT+0xa>
  9a:	ac 98       	cbi	0x15, 4	; 21
  9c:	81 ff       	sbrs	r24, 1
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <LCDSendCmd4BIT+0x12>
  a0:	ad 9a       	sbi	0x15, 5	; 21
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <LCDSendCmd4BIT+0x14>
  a4:	ad 98       	cbi	0x15, 5	; 21
  a6:	82 ff       	sbrs	r24, 2
  a8:	02 c0       	rjmp	.+4      	; 0xae <LCDSendCmd4BIT+0x1c>
  aa:	ae 9a       	sbi	0x15, 6	; 21
  ac:	01 c0       	rjmp	.+2      	; 0xb0 <LCDSendCmd4BIT+0x1e>
  ae:	ae 98       	cbi	0x15, 6	; 21
  b0:	83 ff       	sbrs	r24, 3
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <LCDSendCmd4BIT+0x26>
  b4:	af 9a       	sbi	0x15, 7	; 21
  b6:	01 c0       	rjmp	.+2      	; 0xba <LCDSendCmd4BIT+0x28>
  b8:	af 98       	cbi	0x15, 7	; 21
  ba:	96 9a       	sbi	0x12, 6	; 18
  bc:	96 98       	cbi	0x12, 6	; 18
  be:	8f e9       	ldi	r24, 0x9F	; 159
  c0:	9f e0       	ldi	r25, 0x0F	; 15
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <LCDSendCmd4BIT+0x30>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <LCDSendCmd4BIT+0x36>
  c8:	00 00       	nop
  ca:	08 95       	ret

000000cc <LCDSendCmd>:
  cc:	cf 93       	push	r28
  ce:	c8 2f       	mov	r28, r24
  d0:	94 98       	cbi	0x12, 4	; 18
  d2:	82 95       	swap	r24
  d4:	8f 70       	andi	r24, 0x0F	; 15
  d6:	0e 94 49 00 	call	0x92	; 0x92 <LCDSendCmd4BIT>
  da:	8c 2f       	mov	r24, r28
  dc:	0e 94 49 00 	call	0x92	; 0x92 <LCDSendCmd4BIT>
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <LCDGotoXY>:
  e4:	61 30       	cpi	r22, 0x01	; 1
  e6:	21 f4       	brne	.+8      	; 0xf0 <LCDGotoXY+0xc>
  e8:	81 58       	subi	r24, 0x81	; 129
  ea:	0e 94 66 00 	call	0xcc	; 0xcc <LCDSendCmd>
  ee:	08 95       	ret
  f0:	62 30       	cpi	r22, 0x02	; 2
  f2:	21 f4       	brne	.+8      	; 0xfc <LCDGotoXY+0x18>
  f4:	81 54       	subi	r24, 0x41	; 65
  f6:	0e 94 66 00 	call	0xcc	; 0xcc <LCDSendCmd>
  fa:	08 95       	ret
  fc:	63 30       	cpi	r22, 0x03	; 3
  fe:	21 f4       	brne	.+8      	; 0x108 <LCDGotoXY+0x24>
 100:	8d 56       	subi	r24, 0x6D	; 109
 102:	0e 94 66 00 	call	0xcc	; 0xcc <LCDSendCmd>
 106:	08 95       	ret
 108:	64 30       	cpi	r22, 0x04	; 4
 10a:	19 f4       	brne	.+6      	; 0x112 <LCDGotoXY+0x2e>
 10c:	8d 52       	subi	r24, 0x2D	; 45
 10e:	0e 94 66 00 	call	0xcc	; 0xcc <LCDSendCmd>
 112:	08 95       	ret

00000114 <LCDInit>:
 114:	8c 9a       	sbi	0x11, 4	; 17
 116:	8d 9a       	sbi	0x11, 5	; 17
 118:	8e 9a       	sbi	0x11, 6	; 17
 11a:	a4 9a       	sbi	0x14, 4	; 20
 11c:	a5 9a       	sbi	0x14, 5	; 20
 11e:	a6 9a       	sbi	0x14, 6	; 20
 120:	a7 9a       	sbi	0x14, 7	; 20
 122:	94 98       	cbi	0x12, 4	; 18
 124:	96 98       	cbi	0x12, 6	; 18
 126:	2f e7       	ldi	r18, 0x7F	; 127
 128:	89 ea       	ldi	r24, 0xA9	; 169
 12a:	93 e0       	ldi	r25, 0x03	; 3
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <LCDInit+0x18>
 134:	00 c0       	rjmp	.+0      	; 0x136 <LCDInit+0x22>
 136:	00 00       	nop
 138:	83 e0       	ldi	r24, 0x03	; 3
 13a:	0e 94 49 00 	call	0x92	; 0x92 <LCDSendCmd4BIT>
 13e:	2f e7       	ldi	r18, 0x7F	; 127
 140:	89 ea       	ldi	r24, 0xA9	; 169
 142:	93 e0       	ldi	r25, 0x03	; 3
 144:	21 50       	subi	r18, 0x01	; 1
 146:	80 40       	sbci	r24, 0x00	; 0
 148:	90 40       	sbci	r25, 0x00	; 0
 14a:	e1 f7       	brne	.-8      	; 0x144 <LCDInit+0x30>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <LCDInit+0x3a>
 14e:	00 00       	nop
 150:	83 e0       	ldi	r24, 0x03	; 3
 152:	0e 94 49 00 	call	0x92	; 0x92 <LCDSendCmd4BIT>
 156:	2f e7       	ldi	r18, 0x7F	; 127
 158:	89 ea       	ldi	r24, 0xA9	; 169
 15a:	93 e0       	ldi	r25, 0x03	; 3
 15c:	21 50       	subi	r18, 0x01	; 1
 15e:	80 40       	sbci	r24, 0x00	; 0
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <LCDInit+0x48>
 164:	00 c0       	rjmp	.+0      	; 0x166 <LCDInit+0x52>
 166:	00 00       	nop
 168:	83 e0       	ldi	r24, 0x03	; 3
 16a:	0e 94 49 00 	call	0x92	; 0x92 <LCDSendCmd4BIT>
 16e:	2f e7       	ldi	r18, 0x7F	; 127
 170:	89 ea       	ldi	r24, 0xA9	; 169
 172:	93 e0       	ldi	r25, 0x03	; 3
 174:	21 50       	subi	r18, 0x01	; 1
 176:	80 40       	sbci	r24, 0x00	; 0
 178:	90 40       	sbci	r25, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <LCDInit+0x60>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <LCDInit+0x6a>
 17e:	00 00       	nop
 180:	82 e0       	ldi	r24, 0x02	; 2
 182:	0e 94 49 00 	call	0x92	; 0x92 <LCDSendCmd4BIT>
 186:	88 e2       	ldi	r24, 0x28	; 40
 188:	0e 94 66 00 	call	0xcc	; 0xcc <LCDSendCmd>
 18c:	8c e0       	ldi	r24, 0x0C	; 12
 18e:	0e 94 66 00 	call	0xcc	; 0xcc <LCDSendCmd>
 192:	86 e0       	ldi	r24, 0x06	; 6
 194:	0e 94 66 00 	call	0xcc	; 0xcc <LCDSendCmd>
 198:	80 e8       	ldi	r24, 0x80	; 128
 19a:	0e 94 66 00 	call	0xcc	; 0xcc <LCDSendCmd>
 19e:	08 95       	ret

000001a0 <LCDSendData>:
 1a0:	cf 93       	push	r28
 1a2:	c8 2f       	mov	r28, r24
 1a4:	94 9a       	sbi	0x12, 4	; 18
 1a6:	82 95       	swap	r24
 1a8:	8f 70       	andi	r24, 0x0F	; 15
 1aa:	0e 94 49 00 	call	0x92	; 0x92 <LCDSendCmd4BIT>
 1ae:	8c 2f       	mov	r24, r28
 1b0:	0e 94 49 00 	call	0x92	; 0x92 <LCDSendCmd4BIT>
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <LCDString>:
}


void LCDString(char *msg)
{
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	fc 01       	movw	r30, r24
	uint8_t len = 0;

	while(*msg)
 1c0:	80 81       	ld	r24, Z
 1c2:	88 23       	and	r24, r24
 1c4:	79 f0       	breq	.+30     	; 0x1e4 <LCDString+0x2c>
 1c6:	8f 01       	movw	r16, r30
 1c8:	0f 5f       	subi	r16, 0xFF	; 255
 1ca:	1f 4f       	sbci	r17, 0xFF	; 255
 1cc:	c0 e0       	ldi	r28, 0x00	; 0



void LCDPutchar(char c)
{
	LCDSendData(c);
 1ce:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCDSendData>

	while(*msg)
	{
		LCDPutchar(*msg);
		msg++; 
		len++;
 1d2:	cf 5f       	subi	r28, 0xFF	; 255

void LCDString(char *msg)
{
	uint8_t len = 0;

	while(*msg)
 1d4:	f8 01       	movw	r30, r16
 1d6:	81 91       	ld	r24, Z+
 1d8:	8f 01       	movw	r16, r30
 1da:	81 11       	cpse	r24, r1
 1dc:	f8 cf       	rjmp	.-16     	; 0x1ce <LCDString+0x16>
		LCDPutchar(*msg);
		msg++; 
		len++;
	}

	while(LCD_MAX_CHAR_IN_LINE - len)
 1de:	c4 31       	cpi	r28, 0x14	; 20
 1e0:	11 f4       	brne	.+4      	; 0x1e6 <LCDString+0x2e>
 1e2:	07 c0       	rjmp	.+14     	; 0x1f2 <LCDString+0x3a>
}


void LCDString(char *msg)
{
	uint8_t len = 0;
 1e4:	c0 e0       	ldi	r28, 0x00	; 0



void LCDPutchar(char c)
{
	LCDSendData(c);
 1e6:	80 e2       	ldi	r24, 0x20	; 32
 1e8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCDSendData>
	}

	while(LCD_MAX_CHAR_IN_LINE - len)
	{
		LCDPutchar(0x20); // Space
		len++;
 1ec:	cf 5f       	subi	r28, 0xFF	; 255
		LCDPutchar(*msg);
		msg++; 
		len++;
	}

	while(LCD_MAX_CHAR_IN_LINE - len)
 1ee:	c4 31       	cpi	r28, 0x14	; 20
 1f0:	d1 f7       	brne	.-12     	; 0x1e6 <LCDString+0x2e>
	{
		LCDPutchar(0x20); // Space
		len++;
	}

}
 1f2:	cf 91       	pop	r28
 1f4:	1f 91       	pop	r17
 1f6:	0f 91       	pop	r16
 1f8:	08 95       	ret

000001fa <Timer_0_Init>:


void Timer_0_Init(void)
{
	// TCCR1 for 16 bit
	TCCR1B &= ~(1<<CS10); // prescalling 256 - 001
 1fa:	8e b5       	in	r24, 0x2e	; 46
 1fc:	8e 7f       	andi	r24, 0xFE	; 254
 1fe:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~(1<<CS11);
 200:	8e b5       	in	r24, 0x2e	; 46
 202:	8d 7f       	andi	r24, 0xFD	; 253
 204:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1<<CS12);
 206:	8e b5       	in	r24, 0x2e	; 46
 208:	84 60       	ori	r24, 0x04	; 4
 20a:	8e bd       	out	0x2e, r24	; 46
	
	// sob gula 0 korle wave form generation normal mode
	TCCR1B &= ~(1<<WGM10); //timer normal mode
 20c:	8e b5       	in	r24, 0x2e	; 46
 20e:	8e 7f       	andi	r24, 0xFE	; 254
 210:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~(1<<WGM11); //timer normal mode
 212:	8e b5       	in	r24, 0x2e	; 46
 214:	8d 7f       	andi	r24, 0xFD	; 253
 216:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~(1<<WGM12); //timer normal mode
 218:	8e b5       	in	r24, 0x2e	; 46
 21a:	87 7f       	andi	r24, 0xF7	; 247
 21c:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~(1<<WGM13); //timer normal mode
 21e:	8e b5       	in	r24, 0x2e	; 46
 220:	8f 7e       	andi	r24, 0xEF	; 239
 222:	8e bd       	out	0x2e, r24	; 46
	
	TIMSK |= (1<<OCIE1A); //output compare match enable
 224:	89 b7       	in	r24, 0x39	; 57
 226:	80 61       	ori	r24, 0x10	; 16
 228:	89 bf       	out	0x39, r24	; 57
	TCNT1 = 0; // clear time counter
 22a:	1d bc       	out	0x2d, r1	; 45
 22c:	1c bc       	out	0x2c, r1	; 44
	OCR1A = 31250;
 22e:	82 e1       	ldi	r24, 0x12	; 18
 230:	9a e7       	ldi	r25, 0x7A	; 122
 232:	9b bd       	out	0x2b, r25	; 43
 234:	8a bd       	out	0x2a, r24	; 42
	sei(); // set enable interrupt
 236:	78 94       	sei
 238:	08 95       	ret

0000023a <__vector_7>:
}

ISR(TIMER1_COMPA_vect)
{
 23a:	1f 92       	push	r1
 23c:	0f 92       	push	r0
 23e:	0f b6       	in	r0, 0x3f	; 63
 240:	0f 92       	push	r0
 242:	11 24       	eor	r1, r1
 244:	8f 93       	push	r24
 246:	9f 93       	push	r25
	s++;
 248:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__data_end>
 24c:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <__data_end+0x1>
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <__data_end+0x1>
 256:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__data_end>
	if(s>=60)
 25a:	cc 97       	sbiw	r24, 0x3c	; 60
 25c:	70 f0       	brcs	.+28     	; 0x27a <__vector_7+0x40>
	{
		s=0;
 25e:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <__data_end+0x1>
 262:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <__data_end>
		m++;
 266:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <m>
 26a:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <m+0x1>
 26e:	01 96       	adiw	r24, 0x01	; 1
 270:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <m+0x1>
 274:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <m>
 278:	1e c0       	rjmp	.+60     	; 0x2b6 <__vector_7+0x7c>
	}
	else if(m>=60)
 27a:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <m>
 27e:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <m+0x1>
 282:	cc 97       	sbiw	r24, 0x3c	; 60
 284:	70 f0       	brcs	.+28     	; 0x2a2 <__vector_7+0x68>
	{
		m=0;
 286:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <m+0x1>
 28a:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <m>
		h++;
 28e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <h>
 292:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <h+0x1>
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <h+0x1>
 29c:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <h>
 2a0:	0a c0       	rjmp	.+20     	; 0x2b6 <__vector_7+0x7c>
	}
	else if(h>=12)
 2a2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <h>
 2a6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <h+0x1>
 2aa:	0c 97       	sbiw	r24, 0x0c	; 12
 2ac:	20 f0       	brcs	.+8      	; 0x2b6 <__vector_7+0x7c>
	{
		h=0;
 2ae:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <h+0x1>
 2b2:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <h>
	}
	TCNT1 = 0; // clear time counter
 2b6:	1d bc       	out	0x2d, r1	; 45
 2b8:	1c bc       	out	0x2c, r1	; 44
}
 2ba:	9f 91       	pop	r25
 2bc:	8f 91       	pop	r24
 2be:	0f 90       	pop	r0
 2c0:	0f be       	out	0x3f, r0	; 63
 2c2:	0f 90       	pop	r0
 2c4:	1f 90       	pop	r1
 2c6:	18 95       	reti

000002c8 <main>:


int main(void)
{
	LCDInit();
 2c8:	0e 94 8a 00 	call	0x114	; 0x114 <LCDInit>
	Timer_0_Init(); // initilizing timer = 0
 2cc:	0e 94 fd 00 	call	0x1fa	; 0x1fa <Timer_0_Init>
			h=0;
		}
		
		*/
		
		sprintf(line, "%.2u : %.2u : %.2u", h, m, s);	
 2d0:	00 e6       	ldi	r16, 0x60	; 96
 2d2:	10 e0       	ldi	r17, 0x00	; 0
 2d4:	ca e7       	ldi	r28, 0x7A	; 122
 2d6:	d0 e0       	ldi	r29, 0x00	; 0
 2d8:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <__data_end+0x1>
 2dc:	8f 93       	push	r24
 2de:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__data_end>
 2e2:	8f 93       	push	r24
 2e4:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <m+0x1>
 2e8:	8f 93       	push	r24
 2ea:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <m>
 2ee:	8f 93       	push	r24
 2f0:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <h+0x1>
 2f4:	8f 93       	push	r24
 2f6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <h>
 2fa:	8f 93       	push	r24
 2fc:	1f 93       	push	r17
 2fe:	0f 93       	push	r16
 300:	df 93       	push	r29
 302:	cf 93       	push	r28
 304:	0e 94 94 01 	call	0x328	; 0x328 <sprintf>
		LCDGotoXY(3,1);
 308:	61 e0       	ldi	r22, 0x01	; 1
 30a:	83 e0       	ldi	r24, 0x03	; 3
 30c:	0e 94 72 00 	call	0xe4	; 0xe4 <LCDGotoXY>
		LCDString(line);
 310:	ce 01       	movw	r24, r28
 312:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCDString>
 316:	8d b7       	in	r24, 0x3d	; 61
 318:	9e b7       	in	r25, 0x3e	; 62
 31a:	0a 96       	adiw	r24, 0x0a	; 10
 31c:	0f b6       	in	r0, 0x3f	; 63
 31e:	f8 94       	cli
 320:	9e bf       	out	0x3e, r25	; 62
 322:	0f be       	out	0x3f, r0	; 63
 324:	8d bf       	out	0x3d, r24	; 61
 326:	d8 cf       	rjmp	.-80     	; 0x2d8 <main+0x10>

00000328 <sprintf>:
 328:	ae e0       	ldi	r26, 0x0E	; 14
 32a:	b0 e0       	ldi	r27, 0x00	; 0
 32c:	ea e9       	ldi	r30, 0x9A	; 154
 32e:	f1 e0       	ldi	r31, 0x01	; 1
 330:	0c 94 55 04 	jmp	0x8aa	; 0x8aa <__prologue_saves__+0x1c>
 334:	0d 89       	ldd	r16, Y+21	; 0x15
 336:	1e 89       	ldd	r17, Y+22	; 0x16
 338:	86 e0       	ldi	r24, 0x06	; 6
 33a:	8c 83       	std	Y+4, r24	; 0x04
 33c:	1a 83       	std	Y+2, r17	; 0x02
 33e:	09 83       	std	Y+1, r16	; 0x01
 340:	8f ef       	ldi	r24, 0xFF	; 255
 342:	9f e7       	ldi	r25, 0x7F	; 127
 344:	9e 83       	std	Y+6, r25	; 0x06
 346:	8d 83       	std	Y+5, r24	; 0x05
 348:	ae 01       	movw	r20, r28
 34a:	47 5e       	subi	r20, 0xE7	; 231
 34c:	5f 4f       	sbci	r21, 0xFF	; 255
 34e:	6f 89       	ldd	r22, Y+23	; 0x17
 350:	78 8d       	ldd	r23, Y+24	; 0x18
 352:	ce 01       	movw	r24, r28
 354:	01 96       	adiw	r24, 0x01	; 1
 356:	0e 94 b6 01 	call	0x36c	; 0x36c <vfprintf>
 35a:	ef 81       	ldd	r30, Y+7	; 0x07
 35c:	f8 85       	ldd	r31, Y+8	; 0x08
 35e:	e0 0f       	add	r30, r16
 360:	f1 1f       	adc	r31, r17
 362:	10 82       	st	Z, r1
 364:	2e 96       	adiw	r28, 0x0e	; 14
 366:	e4 e0       	ldi	r30, 0x04	; 4
 368:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <__epilogue_restores__+0x1c>

0000036c <vfprintf>:
 36c:	ab e0       	ldi	r26, 0x0B	; 11
 36e:	b0 e0       	ldi	r27, 0x00	; 0
 370:	ec eb       	ldi	r30, 0xBC	; 188
 372:	f1 e0       	ldi	r31, 0x01	; 1
 374:	0c 94 47 04 	jmp	0x88e	; 0x88e <__prologue_saves__>
 378:	6c 01       	movw	r12, r24
 37a:	7b 01       	movw	r14, r22
 37c:	8a 01       	movw	r16, r20
 37e:	fc 01       	movw	r30, r24
 380:	17 82       	std	Z+7, r1	; 0x07
 382:	16 82       	std	Z+6, r1	; 0x06
 384:	83 81       	ldd	r24, Z+3	; 0x03
 386:	81 ff       	sbrs	r24, 1
 388:	cc c1       	rjmp	.+920    	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 38a:	ce 01       	movw	r24, r28
 38c:	01 96       	adiw	r24, 0x01	; 1
 38e:	3c 01       	movw	r6, r24
 390:	f6 01       	movw	r30, r12
 392:	93 81       	ldd	r25, Z+3	; 0x03
 394:	f7 01       	movw	r30, r14
 396:	93 fd       	sbrc	r25, 3
 398:	85 91       	lpm	r24, Z+
 39a:	93 ff       	sbrs	r25, 3
 39c:	81 91       	ld	r24, Z+
 39e:	7f 01       	movw	r14, r30
 3a0:	88 23       	and	r24, r24
 3a2:	09 f4       	brne	.+2      	; 0x3a6 <vfprintf+0x3a>
 3a4:	ba c1       	rjmp	.+884    	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 3a6:	85 32       	cpi	r24, 0x25	; 37
 3a8:	39 f4       	brne	.+14     	; 0x3b8 <vfprintf+0x4c>
 3aa:	93 fd       	sbrc	r25, 3
 3ac:	85 91       	lpm	r24, Z+
 3ae:	93 ff       	sbrs	r25, 3
 3b0:	81 91       	ld	r24, Z+
 3b2:	7f 01       	movw	r14, r30
 3b4:	85 32       	cpi	r24, 0x25	; 37
 3b6:	29 f4       	brne	.+10     	; 0x3c2 <vfprintf+0x56>
 3b8:	b6 01       	movw	r22, r12
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 3c0:	e7 cf       	rjmp	.-50     	; 0x390 <vfprintf+0x24>
 3c2:	91 2c       	mov	r9, r1
 3c4:	21 2c       	mov	r2, r1
 3c6:	31 2c       	mov	r3, r1
 3c8:	ff e1       	ldi	r31, 0x1F	; 31
 3ca:	f3 15       	cp	r31, r3
 3cc:	d8 f0       	brcs	.+54     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3ce:	8b 32       	cpi	r24, 0x2B	; 43
 3d0:	79 f0       	breq	.+30     	; 0x3f0 <vfprintf+0x84>
 3d2:	38 f4       	brcc	.+14     	; 0x3e2 <vfprintf+0x76>
 3d4:	80 32       	cpi	r24, 0x20	; 32
 3d6:	79 f0       	breq	.+30     	; 0x3f6 <vfprintf+0x8a>
 3d8:	83 32       	cpi	r24, 0x23	; 35
 3da:	a1 f4       	brne	.+40     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3dc:	23 2d       	mov	r18, r3
 3de:	20 61       	ori	r18, 0x10	; 16
 3e0:	1d c0       	rjmp	.+58     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3e2:	8d 32       	cpi	r24, 0x2D	; 45
 3e4:	61 f0       	breq	.+24     	; 0x3fe <vfprintf+0x92>
 3e6:	80 33       	cpi	r24, 0x30	; 48
 3e8:	69 f4       	brne	.+26     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3ea:	23 2d       	mov	r18, r3
 3ec:	21 60       	ori	r18, 0x01	; 1
 3ee:	16 c0       	rjmp	.+44     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3f0:	83 2d       	mov	r24, r3
 3f2:	82 60       	ori	r24, 0x02	; 2
 3f4:	38 2e       	mov	r3, r24
 3f6:	e3 2d       	mov	r30, r3
 3f8:	e4 60       	ori	r30, 0x04	; 4
 3fa:	3e 2e       	mov	r3, r30
 3fc:	2a c0       	rjmp	.+84     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 3fe:	f3 2d       	mov	r31, r3
 400:	f8 60       	ori	r31, 0x08	; 8
 402:	1d c0       	rjmp	.+58     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 404:	37 fc       	sbrc	r3, 7
 406:	2d c0       	rjmp	.+90     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 408:	20 ed       	ldi	r18, 0xD0	; 208
 40a:	28 0f       	add	r18, r24
 40c:	2a 30       	cpi	r18, 0x0A	; 10
 40e:	40 f0       	brcs	.+16     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 410:	8e 32       	cpi	r24, 0x2E	; 46
 412:	b9 f4       	brne	.+46     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 414:	36 fc       	sbrc	r3, 6
 416:	81 c1       	rjmp	.+770    	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 418:	23 2d       	mov	r18, r3
 41a:	20 64       	ori	r18, 0x40	; 64
 41c:	32 2e       	mov	r3, r18
 41e:	19 c0       	rjmp	.+50     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 420:	36 fe       	sbrs	r3, 6
 422:	06 c0       	rjmp	.+12     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 424:	8a e0       	ldi	r24, 0x0A	; 10
 426:	98 9e       	mul	r9, r24
 428:	20 0d       	add	r18, r0
 42a:	11 24       	eor	r1, r1
 42c:	92 2e       	mov	r9, r18
 42e:	11 c0       	rjmp	.+34     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 430:	ea e0       	ldi	r30, 0x0A	; 10
 432:	2e 9e       	mul	r2, r30
 434:	20 0d       	add	r18, r0
 436:	11 24       	eor	r1, r1
 438:	22 2e       	mov	r2, r18
 43a:	f3 2d       	mov	r31, r3
 43c:	f0 62       	ori	r31, 0x20	; 32
 43e:	3f 2e       	mov	r3, r31
 440:	08 c0       	rjmp	.+16     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 442:	8c 36       	cpi	r24, 0x6C	; 108
 444:	21 f4       	brne	.+8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 446:	83 2d       	mov	r24, r3
 448:	80 68       	ori	r24, 0x80	; 128
 44a:	38 2e       	mov	r3, r24
 44c:	02 c0       	rjmp	.+4      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 44e:	88 36       	cpi	r24, 0x68	; 104
 450:	41 f4       	brne	.+16     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 452:	f7 01       	movw	r30, r14
 454:	93 fd       	sbrc	r25, 3
 456:	85 91       	lpm	r24, Z+
 458:	93 ff       	sbrs	r25, 3
 45a:	81 91       	ld	r24, Z+
 45c:	7f 01       	movw	r14, r30
 45e:	81 11       	cpse	r24, r1
 460:	b3 cf       	rjmp	.-154    	; 0x3c8 <vfprintf+0x5c>
 462:	98 2f       	mov	r25, r24
 464:	9f 7d       	andi	r25, 0xDF	; 223
 466:	95 54       	subi	r25, 0x45	; 69
 468:	93 30       	cpi	r25, 0x03	; 3
 46a:	28 f4       	brcc	.+10     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46c:	0c 5f       	subi	r16, 0xFC	; 252
 46e:	1f 4f       	sbci	r17, 0xFF	; 255
 470:	9f e3       	ldi	r25, 0x3F	; 63
 472:	99 83       	std	Y+1, r25	; 0x01
 474:	0d c0       	rjmp	.+26     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 476:	83 36       	cpi	r24, 0x63	; 99
 478:	31 f0       	breq	.+12     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47a:	83 37       	cpi	r24, 0x73	; 115
 47c:	71 f0       	breq	.+28     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 47e:	83 35       	cpi	r24, 0x53	; 83
 480:	09 f0       	breq	.+2      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 482:	59 c0       	rjmp	.+178    	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 484:	21 c0       	rjmp	.+66     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 486:	f8 01       	movw	r30, r16
 488:	80 81       	ld	r24, Z
 48a:	89 83       	std	Y+1, r24	; 0x01
 48c:	0e 5f       	subi	r16, 0xFE	; 254
 48e:	1f 4f       	sbci	r17, 0xFF	; 255
 490:	88 24       	eor	r8, r8
 492:	83 94       	inc	r8
 494:	91 2c       	mov	r9, r1
 496:	53 01       	movw	r10, r6
 498:	13 c0       	rjmp	.+38     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 49a:	28 01       	movw	r4, r16
 49c:	f2 e0       	ldi	r31, 0x02	; 2
 49e:	4f 0e       	add	r4, r31
 4a0:	51 1c       	adc	r5, r1
 4a2:	f8 01       	movw	r30, r16
 4a4:	a0 80       	ld	r10, Z
 4a6:	b1 80       	ldd	r11, Z+1	; 0x01
 4a8:	36 fe       	sbrs	r3, 6
 4aa:	03 c0       	rjmp	.+6      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4ac:	69 2d       	mov	r22, r9
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b2:	6f ef       	ldi	r22, 0xFF	; 255
 4b4:	7f ef       	ldi	r23, 0xFF	; 255
 4b6:	c5 01       	movw	r24, r10
 4b8:	0e 94 a2 03 	call	0x744	; 0x744 <strnlen>
 4bc:	4c 01       	movw	r8, r24
 4be:	82 01       	movw	r16, r4
 4c0:	f3 2d       	mov	r31, r3
 4c2:	ff 77       	andi	r31, 0x7F	; 127
 4c4:	3f 2e       	mov	r3, r31
 4c6:	16 c0       	rjmp	.+44     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4c8:	28 01       	movw	r4, r16
 4ca:	22 e0       	ldi	r18, 0x02	; 2
 4cc:	42 0e       	add	r4, r18
 4ce:	51 1c       	adc	r5, r1
 4d0:	f8 01       	movw	r30, r16
 4d2:	a0 80       	ld	r10, Z
 4d4:	b1 80       	ldd	r11, Z+1	; 0x01
 4d6:	36 fe       	sbrs	r3, 6
 4d8:	03 c0       	rjmp	.+6      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4da:	69 2d       	mov	r22, r9
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	02 c0       	rjmp	.+4      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4e0:	6f ef       	ldi	r22, 0xFF	; 255
 4e2:	7f ef       	ldi	r23, 0xFF	; 255
 4e4:	c5 01       	movw	r24, r10
 4e6:	0e 94 97 03 	call	0x72e	; 0x72e <strnlen_P>
 4ea:	4c 01       	movw	r8, r24
 4ec:	f3 2d       	mov	r31, r3
 4ee:	f0 68       	ori	r31, 0x80	; 128
 4f0:	3f 2e       	mov	r3, r31
 4f2:	82 01       	movw	r16, r4
 4f4:	33 fc       	sbrc	r3, 3
 4f6:	1b c0       	rjmp	.+54     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 4f8:	82 2d       	mov	r24, r2
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	88 16       	cp	r8, r24
 4fe:	99 06       	cpc	r9, r25
 500:	b0 f4       	brcc	.+44     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 502:	b6 01       	movw	r22, r12
 504:	80 e2       	ldi	r24, 0x20	; 32
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 50c:	2a 94       	dec	r2
 50e:	f4 cf       	rjmp	.-24     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 510:	f5 01       	movw	r30, r10
 512:	37 fc       	sbrc	r3, 7
 514:	85 91       	lpm	r24, Z+
 516:	37 fe       	sbrs	r3, 7
 518:	81 91       	ld	r24, Z+
 51a:	5f 01       	movw	r10, r30
 51c:	b6 01       	movw	r22, r12
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 524:	21 10       	cpse	r2, r1
 526:	2a 94       	dec	r2
 528:	21 e0       	ldi	r18, 0x01	; 1
 52a:	82 1a       	sub	r8, r18
 52c:	91 08       	sbc	r9, r1
 52e:	81 14       	cp	r8, r1
 530:	91 04       	cpc	r9, r1
 532:	71 f7       	brne	.-36     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 534:	e8 c0       	rjmp	.+464    	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 536:	84 36       	cpi	r24, 0x64	; 100
 538:	11 f0       	breq	.+4      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 53a:	89 36       	cpi	r24, 0x69	; 105
 53c:	41 f5       	brne	.+80     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 53e:	f8 01       	movw	r30, r16
 540:	37 fe       	sbrs	r3, 7
 542:	07 c0       	rjmp	.+14     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 544:	60 81       	ld	r22, Z
 546:	71 81       	ldd	r23, Z+1	; 0x01
 548:	82 81       	ldd	r24, Z+2	; 0x02
 54a:	93 81       	ldd	r25, Z+3	; 0x03
 54c:	0c 5f       	subi	r16, 0xFC	; 252
 54e:	1f 4f       	sbci	r17, 0xFF	; 255
 550:	08 c0       	rjmp	.+16     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 552:	60 81       	ld	r22, Z
 554:	71 81       	ldd	r23, Z+1	; 0x01
 556:	07 2e       	mov	r0, r23
 558:	00 0c       	add	r0, r0
 55a:	88 0b       	sbc	r24, r24
 55c:	99 0b       	sbc	r25, r25
 55e:	0e 5f       	subi	r16, 0xFE	; 254
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	f3 2d       	mov	r31, r3
 564:	ff 76       	andi	r31, 0x6F	; 111
 566:	3f 2e       	mov	r3, r31
 568:	97 ff       	sbrs	r25, 7
 56a:	09 c0       	rjmp	.+18     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 56c:	90 95       	com	r25
 56e:	80 95       	com	r24
 570:	70 95       	com	r23
 572:	61 95       	neg	r22
 574:	7f 4f       	sbci	r23, 0xFF	; 255
 576:	8f 4f       	sbci	r24, 0xFF	; 255
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	f0 68       	ori	r31, 0x80	; 128
 57c:	3f 2e       	mov	r3, r31
 57e:	2a e0       	ldi	r18, 0x0A	; 10
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	a3 01       	movw	r20, r6
 584:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__ultoa_invert>
 588:	88 2e       	mov	r8, r24
 58a:	86 18       	sub	r8, r6
 58c:	45 c0       	rjmp	.+138    	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 58e:	85 37       	cpi	r24, 0x75	; 117
 590:	31 f4       	brne	.+12     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 592:	23 2d       	mov	r18, r3
 594:	2f 7e       	andi	r18, 0xEF	; 239
 596:	b2 2e       	mov	r11, r18
 598:	2a e0       	ldi	r18, 0x0A	; 10
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	25 c0       	rjmp	.+74     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 59e:	93 2d       	mov	r25, r3
 5a0:	99 7f       	andi	r25, 0xF9	; 249
 5a2:	b9 2e       	mov	r11, r25
 5a4:	8f 36       	cpi	r24, 0x6F	; 111
 5a6:	c1 f0       	breq	.+48     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5a8:	18 f4       	brcc	.+6      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5aa:	88 35       	cpi	r24, 0x58	; 88
 5ac:	79 f0       	breq	.+30     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5ae:	b5 c0       	rjmp	.+362    	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 5b0:	80 37       	cpi	r24, 0x70	; 112
 5b2:	19 f0       	breq	.+6      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b4:	88 37       	cpi	r24, 0x78	; 120
 5b6:	21 f0       	breq	.+8      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5b8:	b0 c0       	rjmp	.+352    	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 5ba:	e9 2f       	mov	r30, r25
 5bc:	e0 61       	ori	r30, 0x10	; 16
 5be:	be 2e       	mov	r11, r30
 5c0:	b4 fe       	sbrs	r11, 4
 5c2:	0d c0       	rjmp	.+26     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5c4:	fb 2d       	mov	r31, r11
 5c6:	f4 60       	ori	r31, 0x04	; 4
 5c8:	bf 2e       	mov	r11, r31
 5ca:	09 c0       	rjmp	.+18     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5cc:	34 fe       	sbrs	r3, 4
 5ce:	0a c0       	rjmp	.+20     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d0:	29 2f       	mov	r18, r25
 5d2:	26 60       	ori	r18, 0x06	; 6
 5d4:	b2 2e       	mov	r11, r18
 5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d8:	28 e0       	ldi	r18, 0x08	; 8
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	05 c0       	rjmp	.+10     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5de:	20 e1       	ldi	r18, 0x10	; 16
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5e4:	20 e1       	ldi	r18, 0x10	; 16
 5e6:	32 e0       	ldi	r19, 0x02	; 2
 5e8:	f8 01       	movw	r30, r16
 5ea:	b7 fe       	sbrs	r11, 7
 5ec:	07 c0       	rjmp	.+14     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5ee:	60 81       	ld	r22, Z
 5f0:	71 81       	ldd	r23, Z+1	; 0x01
 5f2:	82 81       	ldd	r24, Z+2	; 0x02
 5f4:	93 81       	ldd	r25, Z+3	; 0x03
 5f6:	0c 5f       	subi	r16, 0xFC	; 252
 5f8:	1f 4f       	sbci	r17, 0xFF	; 255
 5fa:	06 c0       	rjmp	.+12     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5fc:	60 81       	ld	r22, Z
 5fe:	71 81       	ldd	r23, Z+1	; 0x01
 600:	80 e0       	ldi	r24, 0x00	; 0
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 5f       	subi	r16, 0xFE	; 254
 606:	1f 4f       	sbci	r17, 0xFF	; 255
 608:	a3 01       	movw	r20, r6
 60a:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__ultoa_invert>
 60e:	88 2e       	mov	r8, r24
 610:	86 18       	sub	r8, r6
 612:	fb 2d       	mov	r31, r11
 614:	ff 77       	andi	r31, 0x7F	; 127
 616:	3f 2e       	mov	r3, r31
 618:	36 fe       	sbrs	r3, 6
 61a:	0d c0       	rjmp	.+26     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 61c:	23 2d       	mov	r18, r3
 61e:	2e 7f       	andi	r18, 0xFE	; 254
 620:	a2 2e       	mov	r10, r18
 622:	89 14       	cp	r8, r9
 624:	58 f4       	brcc	.+22     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 626:	34 fe       	sbrs	r3, 4
 628:	0b c0       	rjmp	.+22     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 62a:	32 fc       	sbrc	r3, 2
 62c:	09 c0       	rjmp	.+18     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 62e:	83 2d       	mov	r24, r3
 630:	8e 7e       	andi	r24, 0xEE	; 238
 632:	a8 2e       	mov	r10, r24
 634:	05 c0       	rjmp	.+10     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 636:	b8 2c       	mov	r11, r8
 638:	a3 2c       	mov	r10, r3
 63a:	03 c0       	rjmp	.+6      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 63c:	b8 2c       	mov	r11, r8
 63e:	01 c0       	rjmp	.+2      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 640:	b9 2c       	mov	r11, r9
 642:	a4 fe       	sbrs	r10, 4
 644:	0f c0       	rjmp	.+30     	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 646:	fe 01       	movw	r30, r28
 648:	e8 0d       	add	r30, r8
 64a:	f1 1d       	adc	r31, r1
 64c:	80 81       	ld	r24, Z
 64e:	80 33       	cpi	r24, 0x30	; 48
 650:	21 f4       	brne	.+8      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 652:	9a 2d       	mov	r25, r10
 654:	99 7e       	andi	r25, 0xE9	; 233
 656:	a9 2e       	mov	r10, r25
 658:	09 c0       	rjmp	.+18     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 65a:	a2 fe       	sbrs	r10, 2
 65c:	06 c0       	rjmp	.+12     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 65e:	b3 94       	inc	r11
 660:	b3 94       	inc	r11
 662:	04 c0       	rjmp	.+8      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 664:	8a 2d       	mov	r24, r10
 666:	86 78       	andi	r24, 0x86	; 134
 668:	09 f0       	breq	.+2      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 66a:	b3 94       	inc	r11
 66c:	a3 fc       	sbrc	r10, 3
 66e:	11 c0       	rjmp	.+34     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 670:	a0 fe       	sbrs	r10, 0
 672:	06 c0       	rjmp	.+12     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 674:	b2 14       	cp	r11, r2
 676:	88 f4       	brcc	.+34     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 678:	28 0c       	add	r2, r8
 67a:	92 2c       	mov	r9, r2
 67c:	9b 18       	sub	r9, r11
 67e:	0e c0       	rjmp	.+28     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 680:	b2 14       	cp	r11, r2
 682:	60 f4       	brcc	.+24     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 684:	b6 01       	movw	r22, r12
 686:	80 e2       	ldi	r24, 0x20	; 32
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 68e:	b3 94       	inc	r11
 690:	f7 cf       	rjmp	.-18     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 692:	b2 14       	cp	r11, r2
 694:	18 f4       	brcc	.+6      	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 696:	2b 18       	sub	r2, r11
 698:	02 c0       	rjmp	.+4      	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 69a:	98 2c       	mov	r9, r8
 69c:	21 2c       	mov	r2, r1
 69e:	a4 fe       	sbrs	r10, 4
 6a0:	10 c0       	rjmp	.+32     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6a2:	b6 01       	movw	r22, r12
 6a4:	80 e3       	ldi	r24, 0x30	; 48
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 6ac:	a2 fe       	sbrs	r10, 2
 6ae:	17 c0       	rjmp	.+46     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6b0:	a1 fc       	sbrc	r10, 1
 6b2:	03 c0       	rjmp	.+6      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6b4:	88 e7       	ldi	r24, 0x78	; 120
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	02 c0       	rjmp	.+4      	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6ba:	88 e5       	ldi	r24, 0x58	; 88
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	b6 01       	movw	r22, r12
 6c0:	0c c0       	rjmp	.+24     	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 6c2:	8a 2d       	mov	r24, r10
 6c4:	86 78       	andi	r24, 0x86	; 134
 6c6:	59 f0       	breq	.+22     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6c8:	a1 fe       	sbrs	r10, 1
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6cc:	8b e2       	ldi	r24, 0x2B	; 43
 6ce:	01 c0       	rjmp	.+2      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6d0:	80 e2       	ldi	r24, 0x20	; 32
 6d2:	a7 fc       	sbrc	r10, 7
 6d4:	8d e2       	ldi	r24, 0x2D	; 45
 6d6:	b6 01       	movw	r22, r12
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 6de:	89 14       	cp	r8, r9
 6e0:	38 f4       	brcc	.+14     	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6e2:	b6 01       	movw	r22, r12
 6e4:	80 e3       	ldi	r24, 0x30	; 48
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 6ec:	9a 94       	dec	r9
 6ee:	f7 cf       	rjmp	.-18     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6f0:	8a 94       	dec	r8
 6f2:	f3 01       	movw	r30, r6
 6f4:	e8 0d       	add	r30, r8
 6f6:	f1 1d       	adc	r31, r1
 6f8:	80 81       	ld	r24, Z
 6fa:	b6 01       	movw	r22, r12
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 702:	81 10       	cpse	r8, r1
 704:	f5 cf       	rjmp	.-22     	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 706:	22 20       	and	r2, r2
 708:	09 f4       	brne	.+2      	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 70a:	42 ce       	rjmp	.-892    	; 0x390 <vfprintf+0x24>
 70c:	b6 01       	movw	r22, r12
 70e:	80 e2       	ldi	r24, 0x20	; 32
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	0e 94 ad 03 	call	0x75a	; 0x75a <fputc>
 716:	2a 94       	dec	r2
 718:	f6 cf       	rjmp	.-20     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 71a:	f6 01       	movw	r30, r12
 71c:	86 81       	ldd	r24, Z+6	; 0x06
 71e:	97 81       	ldd	r25, Z+7	; 0x07
 720:	02 c0       	rjmp	.+4      	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
 722:	8f ef       	ldi	r24, 0xFF	; 255
 724:	9f ef       	ldi	r25, 0xFF	; 255
 726:	2b 96       	adiw	r28, 0x0b	; 11
 728:	e2 e1       	ldi	r30, 0x12	; 18
 72a:	0c 94 63 04 	jmp	0x8c6	; 0x8c6 <__epilogue_restores__>

0000072e <strnlen_P>:
 72e:	fc 01       	movw	r30, r24
 730:	05 90       	lpm	r0, Z+
 732:	61 50       	subi	r22, 0x01	; 1
 734:	70 40       	sbci	r23, 0x00	; 0
 736:	01 10       	cpse	r0, r1
 738:	d8 f7       	brcc	.-10     	; 0x730 <strnlen_P+0x2>
 73a:	80 95       	com	r24
 73c:	90 95       	com	r25
 73e:	8e 0f       	add	r24, r30
 740:	9f 1f       	adc	r25, r31
 742:	08 95       	ret

00000744 <strnlen>:
 744:	fc 01       	movw	r30, r24
 746:	61 50       	subi	r22, 0x01	; 1
 748:	70 40       	sbci	r23, 0x00	; 0
 74a:	01 90       	ld	r0, Z+
 74c:	01 10       	cpse	r0, r1
 74e:	d8 f7       	brcc	.-10     	; 0x746 <strnlen+0x2>
 750:	80 95       	com	r24
 752:	90 95       	com	r25
 754:	8e 0f       	add	r24, r30
 756:	9f 1f       	adc	r25, r31
 758:	08 95       	ret

0000075a <fputc>:
 75a:	0f 93       	push	r16
 75c:	1f 93       	push	r17
 75e:	cf 93       	push	r28
 760:	df 93       	push	r29
 762:	fb 01       	movw	r30, r22
 764:	23 81       	ldd	r18, Z+3	; 0x03
 766:	21 fd       	sbrc	r18, 1
 768:	03 c0       	rjmp	.+6      	; 0x770 <fputc+0x16>
 76a:	8f ef       	ldi	r24, 0xFF	; 255
 76c:	9f ef       	ldi	r25, 0xFF	; 255
 76e:	2c c0       	rjmp	.+88     	; 0x7c8 <fputc+0x6e>
 770:	22 ff       	sbrs	r18, 2
 772:	16 c0       	rjmp	.+44     	; 0x7a0 <fputc+0x46>
 774:	46 81       	ldd	r20, Z+6	; 0x06
 776:	57 81       	ldd	r21, Z+7	; 0x07
 778:	24 81       	ldd	r18, Z+4	; 0x04
 77a:	35 81       	ldd	r19, Z+5	; 0x05
 77c:	42 17       	cp	r20, r18
 77e:	53 07       	cpc	r21, r19
 780:	44 f4       	brge	.+16     	; 0x792 <fputc+0x38>
 782:	a0 81       	ld	r26, Z
 784:	b1 81       	ldd	r27, Z+1	; 0x01
 786:	9d 01       	movw	r18, r26
 788:	2f 5f       	subi	r18, 0xFF	; 255
 78a:	3f 4f       	sbci	r19, 0xFF	; 255
 78c:	31 83       	std	Z+1, r19	; 0x01
 78e:	20 83       	st	Z, r18
 790:	8c 93       	st	X, r24
 792:	26 81       	ldd	r18, Z+6	; 0x06
 794:	37 81       	ldd	r19, Z+7	; 0x07
 796:	2f 5f       	subi	r18, 0xFF	; 255
 798:	3f 4f       	sbci	r19, 0xFF	; 255
 79a:	37 83       	std	Z+7, r19	; 0x07
 79c:	26 83       	std	Z+6, r18	; 0x06
 79e:	14 c0       	rjmp	.+40     	; 0x7c8 <fputc+0x6e>
 7a0:	8b 01       	movw	r16, r22
 7a2:	ec 01       	movw	r28, r24
 7a4:	fb 01       	movw	r30, r22
 7a6:	00 84       	ldd	r0, Z+8	; 0x08
 7a8:	f1 85       	ldd	r31, Z+9	; 0x09
 7aa:	e0 2d       	mov	r30, r0
 7ac:	09 95       	icall
 7ae:	89 2b       	or	r24, r25
 7b0:	e1 f6       	brne	.-72     	; 0x76a <fputc+0x10>
 7b2:	d8 01       	movw	r26, r16
 7b4:	16 96       	adiw	r26, 0x06	; 6
 7b6:	8d 91       	ld	r24, X+
 7b8:	9c 91       	ld	r25, X
 7ba:	17 97       	sbiw	r26, 0x07	; 7
 7bc:	01 96       	adiw	r24, 0x01	; 1
 7be:	17 96       	adiw	r26, 0x07	; 7
 7c0:	9c 93       	st	X, r25
 7c2:	8e 93       	st	-X, r24
 7c4:	16 97       	sbiw	r26, 0x06	; 6
 7c6:	ce 01       	movw	r24, r28
 7c8:	df 91       	pop	r29
 7ca:	cf 91       	pop	r28
 7cc:	1f 91       	pop	r17
 7ce:	0f 91       	pop	r16
 7d0:	08 95       	ret

000007d2 <__ultoa_invert>:
 7d2:	fa 01       	movw	r30, r20
 7d4:	aa 27       	eor	r26, r26
 7d6:	28 30       	cpi	r18, 0x08	; 8
 7d8:	51 f1       	breq	.+84     	; 0x82e <__ultoa_invert+0x5c>
 7da:	20 31       	cpi	r18, 0x10	; 16
 7dc:	81 f1       	breq	.+96     	; 0x83e <__ultoa_invert+0x6c>
 7de:	e8 94       	clt
 7e0:	6f 93       	push	r22
 7e2:	6e 7f       	andi	r22, 0xFE	; 254
 7e4:	6e 5f       	subi	r22, 0xFE	; 254
 7e6:	7f 4f       	sbci	r23, 0xFF	; 255
 7e8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ea:	9f 4f       	sbci	r25, 0xFF	; 255
 7ec:	af 4f       	sbci	r26, 0xFF	; 255
 7ee:	b1 e0       	ldi	r27, 0x01	; 1
 7f0:	3e d0       	rcall	.+124    	; 0x86e <__stack+0xf>
 7f2:	b4 e0       	ldi	r27, 0x04	; 4
 7f4:	3c d0       	rcall	.+120    	; 0x86e <__stack+0xf>
 7f6:	67 0f       	add	r22, r23
 7f8:	78 1f       	adc	r23, r24
 7fa:	89 1f       	adc	r24, r25
 7fc:	9a 1f       	adc	r25, r26
 7fe:	a1 1d       	adc	r26, r1
 800:	68 0f       	add	r22, r24
 802:	79 1f       	adc	r23, r25
 804:	8a 1f       	adc	r24, r26
 806:	91 1d       	adc	r25, r1
 808:	a1 1d       	adc	r26, r1
 80a:	6a 0f       	add	r22, r26
 80c:	71 1d       	adc	r23, r1
 80e:	81 1d       	adc	r24, r1
 810:	91 1d       	adc	r25, r1
 812:	a1 1d       	adc	r26, r1
 814:	20 d0       	rcall	.+64     	; 0x856 <__ultoa_invert+0x84>
 816:	09 f4       	brne	.+2      	; 0x81a <__ultoa_invert+0x48>
 818:	68 94       	set
 81a:	3f 91       	pop	r19
 81c:	2a e0       	ldi	r18, 0x0A	; 10
 81e:	26 9f       	mul	r18, r22
 820:	11 24       	eor	r1, r1
 822:	30 19       	sub	r19, r0
 824:	30 5d       	subi	r19, 0xD0	; 208
 826:	31 93       	st	Z+, r19
 828:	de f6       	brtc	.-74     	; 0x7e0 <__ultoa_invert+0xe>
 82a:	cf 01       	movw	r24, r30
 82c:	08 95       	ret
 82e:	46 2f       	mov	r20, r22
 830:	47 70       	andi	r20, 0x07	; 7
 832:	40 5d       	subi	r20, 0xD0	; 208
 834:	41 93       	st	Z+, r20
 836:	b3 e0       	ldi	r27, 0x03	; 3
 838:	0f d0       	rcall	.+30     	; 0x858 <__ultoa_invert+0x86>
 83a:	c9 f7       	brne	.-14     	; 0x82e <__ultoa_invert+0x5c>
 83c:	f6 cf       	rjmp	.-20     	; 0x82a <__ultoa_invert+0x58>
 83e:	46 2f       	mov	r20, r22
 840:	4f 70       	andi	r20, 0x0F	; 15
 842:	40 5d       	subi	r20, 0xD0	; 208
 844:	4a 33       	cpi	r20, 0x3A	; 58
 846:	18 f0       	brcs	.+6      	; 0x84e <__ultoa_invert+0x7c>
 848:	49 5d       	subi	r20, 0xD9	; 217
 84a:	31 fd       	sbrc	r19, 1
 84c:	40 52       	subi	r20, 0x20	; 32
 84e:	41 93       	st	Z+, r20
 850:	02 d0       	rcall	.+4      	; 0x856 <__ultoa_invert+0x84>
 852:	a9 f7       	brne	.-22     	; 0x83e <__ultoa_invert+0x6c>
 854:	ea cf       	rjmp	.-44     	; 0x82a <__ultoa_invert+0x58>
 856:	b4 e0       	ldi	r27, 0x04	; 4
 858:	a6 95       	lsr	r26
 85a:	97 95       	ror	r25
 85c:	87 95       	ror	r24
 85e:	77 95       	ror	r23
 860:	67 95       	ror	r22
 862:	ba 95       	dec	r27
 864:	c9 f7       	brne	.-14     	; 0x858 <__ultoa_invert+0x86>
 866:	00 97       	sbiw	r24, 0x00	; 0
 868:	61 05       	cpc	r22, r1
 86a:	71 05       	cpc	r23, r1
 86c:	08 95       	ret
 86e:	9b 01       	movw	r18, r22
 870:	ac 01       	movw	r20, r24
 872:	0a 2e       	mov	r0, r26
 874:	06 94       	lsr	r0
 876:	57 95       	ror	r21
 878:	47 95       	ror	r20
 87a:	37 95       	ror	r19
 87c:	27 95       	ror	r18
 87e:	ba 95       	dec	r27
 880:	c9 f7       	brne	.-14     	; 0x874 <__stack+0x15>
 882:	62 0f       	add	r22, r18
 884:	73 1f       	adc	r23, r19
 886:	84 1f       	adc	r24, r20
 888:	95 1f       	adc	r25, r21
 88a:	a0 1d       	adc	r26, r0
 88c:	08 95       	ret

0000088e <__prologue_saves__>:
 88e:	2f 92       	push	r2
 890:	3f 92       	push	r3
 892:	4f 92       	push	r4
 894:	5f 92       	push	r5
 896:	6f 92       	push	r6
 898:	7f 92       	push	r7
 89a:	8f 92       	push	r8
 89c:	9f 92       	push	r9
 89e:	af 92       	push	r10
 8a0:	bf 92       	push	r11
 8a2:	cf 92       	push	r12
 8a4:	df 92       	push	r13
 8a6:	ef 92       	push	r14
 8a8:	ff 92       	push	r15
 8aa:	0f 93       	push	r16
 8ac:	1f 93       	push	r17
 8ae:	cf 93       	push	r28
 8b0:	df 93       	push	r29
 8b2:	cd b7       	in	r28, 0x3d	; 61
 8b4:	de b7       	in	r29, 0x3e	; 62
 8b6:	ca 1b       	sub	r28, r26
 8b8:	db 0b       	sbc	r29, r27
 8ba:	0f b6       	in	r0, 0x3f	; 63
 8bc:	f8 94       	cli
 8be:	de bf       	out	0x3e, r29	; 62
 8c0:	0f be       	out	0x3f, r0	; 63
 8c2:	cd bf       	out	0x3d, r28	; 61
 8c4:	09 94       	ijmp

000008c6 <__epilogue_restores__>:
 8c6:	2a 88       	ldd	r2, Y+18	; 0x12
 8c8:	39 88       	ldd	r3, Y+17	; 0x11
 8ca:	48 88       	ldd	r4, Y+16	; 0x10
 8cc:	5f 84       	ldd	r5, Y+15	; 0x0f
 8ce:	6e 84       	ldd	r6, Y+14	; 0x0e
 8d0:	7d 84       	ldd	r7, Y+13	; 0x0d
 8d2:	8c 84       	ldd	r8, Y+12	; 0x0c
 8d4:	9b 84       	ldd	r9, Y+11	; 0x0b
 8d6:	aa 84       	ldd	r10, Y+10	; 0x0a
 8d8:	b9 84       	ldd	r11, Y+9	; 0x09
 8da:	c8 84       	ldd	r12, Y+8	; 0x08
 8dc:	df 80       	ldd	r13, Y+7	; 0x07
 8de:	ee 80       	ldd	r14, Y+6	; 0x06
 8e0:	fd 80       	ldd	r15, Y+5	; 0x05
 8e2:	0c 81       	ldd	r16, Y+4	; 0x04
 8e4:	1b 81       	ldd	r17, Y+3	; 0x03
 8e6:	aa 81       	ldd	r26, Y+2	; 0x02
 8e8:	b9 81       	ldd	r27, Y+1	; 0x01
 8ea:	ce 0f       	add	r28, r30
 8ec:	d1 1d       	adc	r29, r1
 8ee:	0f b6       	in	r0, 0x3f	; 63
 8f0:	f8 94       	cli
 8f2:	de bf       	out	0x3e, r29	; 62
 8f4:	0f be       	out	0x3f, r0	; 63
 8f6:	cd bf       	out	0x3d, r28	; 61
 8f8:	ed 01       	movw	r28, r26
 8fa:	08 95       	ret

000008fc <_exit>:
 8fc:	f8 94       	cli

000008fe <__stop_program>:
 8fe:	ff cf       	rjmp	.-2      	; 0x8fe <__stop_program>
